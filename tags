!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run aclocal-1.11$/;"	m
ACLOCAL	manpages/Makefile	/^ACLOCAL = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run aclocal-1.11$/;"	m
ACLOCAL	src/Makefile	/^ACLOCAL = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run aclocal-1.11$/;"	m
ACLOCAL	utils/Makefile	/^ACLOCAL = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run aclocal-1.11$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	manpages/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	utils/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AC_ONLINE	src/cpufreqd_acpi_ac.c	31;"	d	file:
AC_TYPE	src/cpufreqd_acpi_ac.c	30;"	d	file:
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run tar$/;"	m
AMTAR	manpages/Makefile	/^AMTAR = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run tar$/;"	m
AMTAR	src/Makefile	/^AMTAR = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run tar$/;"	m
AMTAR	utils/Makefile	/^AMTAR = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run tar$/;"	m
AM_CFLAGS	src/Makefile	/^AM_CFLAGS = -W -Wall -Wshadow -W -Wpointer-arith \\$/;"	m
AM_CFLAGS	utils/Makefile	/^AM_CFLAGS = -W -Wall -Wshadow -W -Wpointer-arith \\$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\$/;"	m
APM_PROC_FILE	src/cpufreqd_apm.c	29;"	d	file:
AR	Makefile	/^AR = ar$/;"	m
AR	manpages/Makefile	/^AR = ar$/;"	m
AR	src/Makefile	/^AR = ar$/;"	m
AR	utils/Makefile	/^AR = ar$/;"	m
ARG_MASK	src/cpufreqd_remote.h	43;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoconf$/;"	m
AUTOCONF	manpages/Makefile	/^AUTOCONF = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoconf$/;"	m
AUTOCONF	src/Makefile	/^AUTOCONF = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoconf$/;"	m
AUTOCONF	utils/Makefile	/^AUTOCONF = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoheader$/;"	m
AUTOHEADER	manpages/Makefile	/^AUTOHEADER = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoheader$/;"	m
AUTOHEADER	src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoheader$/;"	m
AUTOHEADER	utils/Makefile	/^AUTOHEADER = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run automake-1.11$/;"	m
AUTOMAKE	manpages/Makefile	/^AUTOMAKE = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run automake-1.11$/;"	m
AUTOMAKE	src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run automake-1.11$/;"	m
AUTOMAKE	utils/Makefile	/^AUTOMAKE = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = mawk$/;"	m
AWK	manpages/Makefile	/^AWK = mawk$/;"	m
AWK	src/Makefile	/^AWK = mawk$/;"	m
AWK	utils/Makefile	/^AWK = mawk$/;"	m
BATTERY_TYPE	src/cpufreqd_acpi_battery.c	31;"	d	file:
BUFLEN_PARAMETER_VALUE	src/cpufreqd_governor_parameters.c	33;"	d	file:
BUILD_PLUGINS	src/Makefile	/^BUILD_PLUGINS = cpufreqd_programs.la cpufreqd_cpu.la $(am__append_1) \\$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CC	manpages/Makefile	/^CC = gcc$/;"	m
CC	src/Makefile	/^CC = gcc$/;"	m
CC	utils/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	manpages/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	utils/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	src/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	utils/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	manpages/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	src/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	utils/Makefile	/^CFLAGS = -g -O2$/;"	m
CHARGE_FULL	src/cpufreqd_acpi_battery.c	34;"	d	file:
CHARGE_NOW	src/cpufreqd_acpi_battery.c	35;"	d	file:
CMD_CUR_PROFILES	src/cpufreqd_remote.h	41;"	d
CMD_LIST_PROFILES	src/cpufreqd_remote.h	37;"	d
CMD_LIST_RULES	src/cpufreqd_remote.h	39;"	d
CMD_SET_MODE	src/cpufreqd_remote.h	40;"	d
CMD_SET_PROFILE	src/cpufreqd_remote.h	36;"	d
CMD_SET_RULE	src/cpufreqd_remote.h	38;"	d
CMD_SHIFT	src/cpufreqd_remote.h	34;"	d
CMD_UPDATE_STATE	src/cpufreqd_remote.h	35;"	d
COMPILE	src/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	utils/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	manpages/Makefile	/^CONFIG_CLEAN_FILES = cpufreqd.8$/;"	m
CONFIG_CLEAN_FILES	src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	utils/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	manpages/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	utils/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	manpages/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	utils/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	manpages/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/Makefile	/^CPP = gcc -E$/;"	m
CPP	utils/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	manpages/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	utils/Makefile	/^CPPFLAGS = $/;"	m
CPUFREQD_CONFDIR	config.h	5;"	d
CPUFREQD_CONFDIR	src/cpufreqd.h	37;"	d
CPUFREQD_CONFIG	src/cpufreqd.h	48;"	d
CPUFREQD_CONFPATH	Makefile	/^CPUFREQD_CONFPATH = \/usr\/local\/etc\/$/;"	m
CPUFREQD_CONFPATH	manpages/Makefile	/^CPUFREQD_CONFPATH = \/usr\/local\/etc\/$/;"	m
CPUFREQD_CONFPATH	src/Makefile	/^CPUFREQD_CONFPATH = \/usr\/local\/etc\/$/;"	m
CPUFREQD_CONFPATH	utils/Makefile	/^CPUFREQD_CONFPATH = \/usr\/local\/etc\/$/;"	m
CPUFREQD_CONF_DIR	Makefile	/^CPUFREQD_CONF_DIR = \/usr\/local\/etc$/;"	m
CPUFREQD_CONF_DIR	manpages/Makefile	/^CPUFREQD_CONF_DIR = \/usr\/local\/etc$/;"	m
CPUFREQD_CONF_DIR	src/Makefile	/^CPUFREQD_CONF_DIR = \/usr\/local\/etc$/;"	m
CPUFREQD_CONF_DIR	utils/Makefile	/^CPUFREQD_CONF_DIR = \/usr\/local\/etc$/;"	m
CPUFREQD_LDFLAGS	Makefile	/^CPUFREQD_LDFLAGS =  -ldl -lcpufreq$/;"	m
CPUFREQD_LDFLAGS	manpages/Makefile	/^CPUFREQD_LDFLAGS =  -ldl -lcpufreq$/;"	m
CPUFREQD_LDFLAGS	src/Makefile	/^CPUFREQD_LDFLAGS =  -ldl -lcpufreq$/;"	m
CPUFREQD_LDFLAGS	utils/Makefile	/^CPUFREQD_LDFLAGS =  -ldl -lcpufreq$/;"	m
CPUFREQD_LIBDIR	config.h	8;"	d
CPUFREQD_LIBDIR	src/cpufreqd.h	41;"	d
CPUFREQD_LIBPATH	Makefile	/^CPUFREQD_LIBPATH = \/usr\/local\/lib\/$/;"	m
CPUFREQD_LIBPATH	manpages/Makefile	/^CPUFREQD_LIBPATH = \/usr\/local\/lib\/$/;"	m
CPUFREQD_LIBPATH	src/Makefile	/^CPUFREQD_LIBPATH = \/usr\/local\/lib\/$/;"	m
CPUFREQD_LIBPATH	utils/Makefile	/^CPUFREQD_LIBPATH = \/usr\/local\/lib\/$/;"	m
CPUFREQD_PIDFILE	src/cpufreqd.h	49;"	d
CPUFREQD_SOCKET	src/sock_utils.h	23;"	d
CPUFREQD_SOCKFILE	src/cpufreqd.h	50;"	d
CPUFREQD_STATEDIR	config.h	11;"	d
CPUFREQD_STATEDIR	src/cpufreqd.h	45;"	d
CPUFREQD_STATEPATH	Makefile	/^CPUFREQD_STATEPATH = \/usr\/local\/var\/$/;"	m
CPUFREQD_STATEPATH	manpages/Makefile	/^CPUFREQD_STATEPATH = \/usr\/local\/var\/$/;"	m
CPUFREQD_STATEPATH	src/Makefile	/^CPUFREQD_STATEPATH = \/usr\/local\/var\/$/;"	m
CPUFREQD_STATEPATH	utils/Makefile	/^CPUFREQD_STATEPATH = \/usr\/local\/var\/$/;"	m
CPUINFO_PROC	src/cpufreq_utils.h	23;"	d
CPU_ALL	src/cpufreqd_cpu.c	27;"	d	file:
CPU_ANY	src/cpufreqd_cpu.c	26;"	d	file:
CPU_INFO_FILE	src/cpufreqd_tau.c	31;"	d	file:
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	utils/Makefile	/^CTAGS = ctags$/;"	m
CURRENT_NOW	src/cpufreqd_acpi_battery.c	38;"	d	file:
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	manpages/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	utils/Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	src/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	utils/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_POLL	src/cpufreqd.h	53;"	d
DEFAULT_VERBOSITY	src/cpufreqd.h	54;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	manpages/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	utils/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	manpages/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	utils/Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	manpages/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	utils/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(am__configure_deps) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	manpages/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in \\$/;"	m
DIST_COMMON	src/Makefile	/^DIST_COMMON = $(noinst_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	utils/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	manpages/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/Makefile	/^DIST_SOURCES = $(am__cpufreqd_acpi_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	utils/Makefile	/^DIST_SOURCES = $(cpufreqd_get_SOURCES) $(cpufreqd_set_SOURCES)$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DONT_MATCH	src/cpufreqd_plugin.h	35;"	d
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	manpages/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	utils/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	manpages/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	utils/Makefile	/^DUMPBIN = $/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	manpages/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	utils/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	manpages/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	utils/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	manpages/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	utils/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	manpages/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	utils/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENERGY_FULL	src/cpufreqd_acpi_battery.c	32;"	d	file:
ENERGY_NOW	src/cpufreqd_acpi_battery.c	33;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	utils/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	manpages/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	utils/Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = cpufreqd.conf \\$/;"	m
EXTRA_DIST	manpages/Makefile	/^EXTRA_DIST = $(man_MANS)$/;"	m
FALSE	src/cpufreqd_plugin.h	33;"	d
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	manpages/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	utils/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	manpages/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	utils/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HAS_CPU	src/config_parser.c	269;"	d	file:
HAS_MAX	src/config_parser.c	267;"	d	file:
HAS_MIN	src/config_parser.c	266;"	d	file:
HAS_NAME	src/config_parser.c	265;"	d	file:
HAS_NAME	src/config_parser.c	457;"	d	file:
HAS_POLICY	src/config_parser.c	268;"	d	file:
HAS_PROFILE	src/config_parser.c	458;"	d	file:
HAVE_CONNECT	config.h	14;"	d
HAVE_CPUFREQ_H	config.h	17;"	d
HAVE_CTYPE_H	config.h	20;"	d
HAVE_DIRENT_H	config.h	24;"	d
HAVE_DLFCN_H	config.h	27;"	d
HAVE_ERRNO_H	config.h	33;"	d
HAVE_FCNTL_H	config.h	36;"	d
HAVE_FNMATCH_H	config.h	39;"	d
HAVE_FORK	config.h	42;"	d
HAVE_GETOPT_H	config.h	45;"	d
HAVE_INTTYPES_H	config.h	48;"	d
HAVE_LIBGEN_H	config.h	51;"	d
HAVE_LIMITS_H	config.h	54;"	d
HAVE_MALLOC	config.h	58;"	d
HAVE_MEMORY_H	config.h	61;"	d
HAVE_MEMSET	config.h	64;"	d
HAVE_PERROR	config.h	70;"	d
HAVE_REALPATH	config.h	73;"	d
HAVE_SCANDIR	config.h	76;"	d
HAVE_SIGNAL_H	config.h	79;"	d
HAVE_SOCKET	config.h	82;"	d
HAVE_STDINT_H	config.h	89;"	d
HAVE_STDLIB_H	config.h	92;"	d
HAVE_STRERROR	config.h	95;"	d
HAVE_STRINGS_H	config.h	98;"	d
HAVE_STRING_H	config.h	101;"	d
HAVE_STRSTR	config.h	104;"	d
HAVE_SYSLOG_H	config.h	107;"	d
HAVE_SYS_SOCKET_H	config.h	118;"	d
HAVE_SYS_STAT_H	config.h	121;"	d
HAVE_SYS_TYPES_H	config.h	124;"	d
HAVE_SYS_UN_H	config.h	127;"	d
HAVE_UNISTD_H	config.h	130;"	d
HAVE_VFORK	config.h	133;"	d
HAVE_VPRINTF	config.h	139;"	d
HAVE_WORKING_FORK	config.h	142;"	d
HAVE_WORKING_VFORK	config.h	145;"	d
HEADERS	src/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	manpages/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	utils/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	manpages/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	utils/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	manpages/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	utils/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	manpages/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	utils/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	manpages/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	utils/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	manpages/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	utils/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INVALID_CMD	src/cpufreqd_remote.h	50;"	d
KERNEL_VERSION_24	src/cpufreqd_plugin.h	39;"	d
KERNEL_VERSION_26	src/cpufreqd_plugin.h	38;"	d
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	manpages/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	src/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	utils/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	manpages/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	utils/Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	manpages/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	utils/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	manpages/Makefile	/^LIBS = $/;"	m
LIBS	src/Makefile	/^LIBS = $/;"	m
LIBS	utils/Makefile	/^LIBS = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	manpages/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	utils/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	manpages/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	src/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LIBTOOL_DEPS	utils/Makefile	/^LIBTOOL_DEPS = .\/ltmain.sh$/;"	m
LINK	src/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LINK	utils/Makefile	/^LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	manpages/Makefile	/^LIPO = $/;"	m
LIPO	src/Makefile	/^LIPO = $/;"	m
LIPO	utils/Makefile	/^LIPO = $/;"	m
LIST	src/list.h	/^struct LIST {$/;"	s
LIST_EMPTY	src/list.h	35;"	d
LIST_FOREACH	src/list.h	25;"	d
LIST_FOREACH_NODE	src/list.h	32;"	d
LIST_FOREACH_NODE	src/main.c	/^	LIST_FOREACH_NODE(node, rule_list) {$/;"	f
LIST_FOREACH_NODE	src/plugin_utils.c	/^	LIST_FOREACH_NODE(node, plugins) {$/;"	f
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	manpages/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/Makefile	/^LN_S = ln -s$/;"	m
LN_S	utils/Makefile	/^LN_S = ln -s$/;"	m
LOG_ALERT	src/cpufreqd_log.h	25;"	d
LOG_CRIT	src/cpufreqd_log.h	26;"	d
LOG_DEBUG	src/cpufreqd_log.h	31;"	d
LOG_EMERG	src/cpufreqd_log.h	24;"	d
LOG_ERR	src/cpufreqd_log.h	27;"	d
LOG_INFO	src/cpufreqd_log.h	30;"	d
LOG_NOTICE	src/cpufreqd_log.h	29;"	d
LOG_WARNING	src/cpufreqd_log.h	28;"	d
LSTAT_FOLLOWS_SLASHED_SYMLINK	config.h	149;"	d
LTCOMPILE	src/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	utils/Makefile	/^LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	manpages/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	utils/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	src/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	153;"	d
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run makeinfo$/;"	m
MAKEINFO	manpages/Makefile	/^MAKEINFO = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run makeinfo$/;"	m
MAKEINFO	src/Makefile	/^MAKEINFO = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run makeinfo$/;"	m
MAKEINFO	utils/Makefile	/^MAKEINFO = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/missing --run makeinfo$/;"	m
MAKE_COMMAND	src/cpufreqd_remote.h	49;"	d
MANS	manpages/Makefile	/^MANS = $(man_MANS)$/;"	m
MATCH	src/cpufreqd_plugin.h	36;"	d
MAX_PATH_LEN	src/cpufreqd.h	57;"	d
MAX_STRING_LEN	src/cpufreqd.h	56;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	manpages/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	utils/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MODE_DYNAMIC	src/cpufreqd_remote.h	44;"	d
MODE_MANUAL	src/cpufreqd_remote.h	45;"	d
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	manpages/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	utils/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	manpages/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/Makefile	/^NMEDIT = $/;"	m
NMEDIT	utils/Makefile	/^NMEDIT = $/;"	m
NODE	src/list.h	/^struct NODE {$/;"	s
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	manpages/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	utils/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	manpages/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	utils/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NROFF	manpages/Makefile	/^NROFF = nroff$/;"	m
NVCLOCK_SRCDIR	Makefile	/^NVCLOCK_SRCDIR = $/;"	m
NVCLOCK_SRCDIR	manpages/Makefile	/^NVCLOCK_SRCDIR = $/;"	m
NVCLOCK_SRCDIR	src/Makefile	/^NVCLOCK_SRCDIR = $/;"	m
NVCLOCK_SRCDIR	utils/Makefile	/^NVCLOCK_SRCDIR = $/;"	m
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	manpages/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	utils/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	manpages/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	utils/Makefile	/^OBJEXT = o$/;"	m
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	manpages/Makefile	/^OTOOL = $/;"	m
OTOOL	src/Makefile	/^OTOOL = $/;"	m
OTOOL	utils/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	manpages/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	utils/Makefile	/^OTOOL64 = $/;"	m
PACKAGE	Makefile	/^PACKAGE = cpufreqd$/;"	m
PACKAGE	config.h	159;"	d
PACKAGE	manpages/Makefile	/^PACKAGE = cpufreqd$/;"	m
PACKAGE	src/Makefile	/^PACKAGE = cpufreqd$/;"	m
PACKAGE	utils/Makefile	/^PACKAGE = cpufreqd$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = malattia@linux.it$/;"	m
PACKAGE_BUGREPORT	config.h	162;"	d
PACKAGE_BUGREPORT	manpages/Makefile	/^PACKAGE_BUGREPORT = malattia@linux.it$/;"	m
PACKAGE_BUGREPORT	src/Makefile	/^PACKAGE_BUGREPORT = malattia@linux.it$/;"	m
PACKAGE_BUGREPORT	utils/Makefile	/^PACKAGE_BUGREPORT = malattia@linux.it$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = cpufreqd$/;"	m
PACKAGE_NAME	config.h	165;"	d
PACKAGE_NAME	manpages/Makefile	/^PACKAGE_NAME = cpufreqd$/;"	m
PACKAGE_NAME	src/Makefile	/^PACKAGE_NAME = cpufreqd$/;"	m
PACKAGE_NAME	utils/Makefile	/^PACKAGE_NAME = cpufreqd$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = cpufreqd 2.4.1$/;"	m
PACKAGE_STRING	config.h	168;"	d
PACKAGE_STRING	manpages/Makefile	/^PACKAGE_STRING = cpufreqd 2.4.1$/;"	m
PACKAGE_STRING	src/Makefile	/^PACKAGE_STRING = cpufreqd 2.4.1$/;"	m
PACKAGE_STRING	utils/Makefile	/^PACKAGE_STRING = cpufreqd 2.4.1$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = cpufreqd$/;"	m
PACKAGE_TARNAME	config.h	171;"	d
PACKAGE_TARNAME	manpages/Makefile	/^PACKAGE_TARNAME = cpufreqd$/;"	m
PACKAGE_TARNAME	src/Makefile	/^PACKAGE_TARNAME = cpufreqd$/;"	m
PACKAGE_TARNAME	utils/Makefile	/^PACKAGE_TARNAME = cpufreqd$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	174;"	d
PACKAGE_URL	manpages/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	utils/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 2.4.1$/;"	m
PACKAGE_VERSION	config.h	177;"	d
PACKAGE_VERSION	manpages/Makefile	/^PACKAGE_VERSION = 2.4.1$/;"	m
PACKAGE_VERSION	src/Makefile	/^PACKAGE_VERSION = 2.4.1$/;"	m
PACKAGE_VERSION	utils/Makefile	/^PACKAGE_VERSION = 2.4.1$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	manpages/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	utils/Makefile	/^PATH_SEPARATOR = :$/;"	m
PLUGGED	src/cpufreqd_acpi_ac.c	33;"	d	file:
PLUGGED	src/cpufreqd_apm.c	30;"	d	file:
PLUGGED	src/cpufreqd_pmu.c	41;"	d	file:
PMU_BATTERY_FILE	src/cpufreqd_pmu.c	36;"	d	file:
PMU_BATTERY_FILE	src/cpufreqd_pmu.c	39;"	d	file:
PMU_INFO_FILE	src/cpufreqd_pmu.c	35;"	d	file:
PMU_INFO_FILE	src/cpufreqd_pmu.c	38;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	manpages/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	utils/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	manpages/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	utils/Makefile	/^POST_UNINSTALL = :$/;"	m
POWER_SUPPLY	src/cpufreqd_acpi_ac.c	29;"	d	file:
POWER_SUPPLY	src/cpufreqd_acpi_battery.c	30;"	d	file:
PRESENT	src/cpufreqd_acpi_battery.c	36;"	d	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	manpages/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	utils/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	manpages/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	utils/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRG_LENGTH	src/cpufreqd_programs.c	29;"	d	file:
PROGRAMS	src/Makefile	/^PROGRAMS = $(sbin_PROGRAMS)$/;"	m
PROGRAMS	utils/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PTHREAD_DIR	config.h	180;"	d
PTHREAD_SRCDIR	Makefile	/^PTHREAD_SRCDIR = \/usr$/;"	m
PTHREAD_SRCDIR	manpages/Makefile	/^PTHREAD_SRCDIR = \/usr$/;"	m
PTHREAD_SRCDIR	src/Makefile	/^PTHREAD_SRCDIR = \/usr$/;"	m
PTHREAD_SRCDIR	utils/Makefile	/^PTHREAD_SRCDIR = \/usr$/;"	m
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	manpages/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	utils/Makefile	/^RANLIB = ranlib$/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REMOTE_ARG	src/cpufreqd_remote.h	48;"	d
REMOTE_CMD	src/cpufreqd_remote.h	47;"	d
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	manpages/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/Makefile	/^SED = \/bin\/sed$/;"	m
SED	utils/Makefile	/^SED = \/bin\/sed$/;"	m
SENSORS_SRCDIR	Makefile	/^SENSORS_SRCDIR = $/;"	m
SENSORS_SRCDIR	manpages/Makefile	/^SENSORS_SRCDIR = $/;"	m
SENSORS_SRCDIR	src/Makefile	/^SENSORS_SRCDIR = $/;"	m
SENSORS_SRCDIR	utils/Makefile	/^SENSORS_SRCDIR = $/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	manpages/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	utils/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	manpages/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	utils/Makefile	/^SHELL = \/bin\/bash$/;"	m
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	manpages/Makefile	/^SOURCES =$/;"	m
SOURCES	src/Makefile	/^SOURCES = $(cpufreqd_acpi_la_SOURCES) $(cpufreqd_apm_la_SOURCES) \\$/;"	m
SOURCES	utils/Makefile	/^SOURCES = $(cpufreqd_get_SOURCES) $(cpufreqd_set_SOURCES)$/;"	m
STATUS	src/cpufreqd_acpi_battery.c	37;"	d	file:
STDC_HEADERS	config.h	186;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	manpages/Makefile	/^STRIP = strip$/;"	m
STRIP	src/Makefile	/^STRIP = strip$/;"	m
STRIP	utils/Makefile	/^STRIP = strip$/;"	m
SUBDIRS	Makefile	/^SUBDIRS = src utils manpages$/;"	m
SYS_CPU_DIR	src/cpufreqd_governor_parameters.c	34;"	d	file:
THERMAL	src/cpufreqd_acpi_temperature.c	29;"	d	file:
THERMAL_TEMP	src/cpufreqd_acpi_temperature.c	33;"	d	file:
THERMAL_TYPE	src/cpufreqd_acpi_temperature.c	30;"	d	file:
THERMAL_TYPE_ALT	src/cpufreqd_acpi_temperature.c	32;"	d	file:
TIME_WITH_SYS_TIME	config.h	189;"	d
TMP_DIR_TEMPL	src/sock_utils.h	24;"	d
TMP_DIR_TEMPL_LEN	src/sock_utils.h	25;"	d
TNODE	src/cpufreqd_programs.c	/^struct TNODE {$/;"	s	file:
TNODE	src/cpufreqd_programs.c	/^typedef struct TNODE TNODE;$/;"	t	typeref:struct:TNODE	file:
TREE	src/cpufreqd_programs.c	/^typedef TNODE TREE;$/;"	t	file:
TRIGGER_PROFILE_EVENT	src/main.c	58;"	d	file:
TRIGGER_RULE_EVENT	src/main.c	47;"	d	file:
TRUE	src/cpufreqd_plugin.h	34;"	d
UNPLUGGED	src/cpufreqd_acpi_ac.c	34;"	d	file:
UNPLUGGED	src/cpufreqd_apm.c	31;"	d	file:
UNPLUGGED	src/cpufreqd_pmu.c	42;"	d	file:
VERSION	Makefile	/^VERSION = 2.4.1$/;"	m
VERSION	config.h	192;"	d
VERSION	manpages/Makefile	/^VERSION = 2.4.1$/;"	m
VERSION	src/Makefile	/^VERSION = 2.4.1$/;"	m
VERSION	utils/Makefile	/^VERSION = 2.4.1$/;"	m
_CONFIG_PARSER_H	src/config_parser.h	21;"	d
__CPUFREQD_H__	src/cpufreqd.h	25;"	d
__CPUFREQD_LOG_H	src/cpufreqd_log.h	21;"	d
__CPUFREQD_MAINTAINER__	src/cpufreqd.h	28;"	d
__CPUFREQD_PLUGIN_H__	src/cpufreqd_plugin.h	21;"	d
__CPUFREQD_REMOTE_H	src/cpufreqd_remote.h	21;"	d
__CPUFREQD_VERSION__	src/cpufreqd.h	27;"	d
__LIST_H	src/list.h	21;"	d
__UNUSED__	src/cpufreqd.h	31;"	d
__UNUSED__	src/cpufreqd.h	33;"	d
__attribute__	src/cpufreqd_sensors.c	27;"	d	file:
abs_builddir	Makefile	/^abs_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_builddir	manpages/Makefile	/^abs_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/manpages$/;"	m
abs_builddir	src/Makefile	/^abs_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/src$/;"	m
abs_builddir	utils/Makefile	/^abs_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/utils$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_srcdir	manpages/Makefile	/^abs_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/manpages$/;"	m
abs_srcdir	src/Makefile	/^abs_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/src$/;"	m
abs_srcdir	utils/Makefile	/^abs_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1\/utils$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_builddir	manpages/Makefile	/^abs_top_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_builddir	src/Makefile	/^abs_top_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_builddir	utils/Makefile	/^abs_top_builddir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_srcdir	manpages/Makefile	/^abs_top_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_srcdir	src/Makefile	/^abs_top_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_top_srcdir	utils/Makefile	/^abs_top_srcdir = \/home\/parth\/Downloads\/cpufreqd-2.4.1$/;"	m
abs_value	src/cpufreqd_governor_parameters.c	/^		long long int abs_value;$/;"	l
ac	src/cpufreqd_acpi_ac.c	/^	const int *ac = (const int *)s;$/;"	l
ac	src/cpufreqd_apm.c	/^	const unsigned int *ac = (const unsigned int *)s;$/;"	l
ac	src/cpufreqd_pmu.c	/^static unsigned int ac;$/;"	v	file:
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	manpages/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	utils/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	manpages/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	utils/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_dir_num	src/cpufreqd_acpi_ac.c	/^static int ac_dir_num;$/;"	v	file:
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_parm	src/cpufreqd_pmu.c	/^	const unsigned int *ac_parm = (const unsigned int *)s;$/;"	l
ac_state	src/cpufreqd_acpi_ac.c	/^static int ac_state;$/;"	v	file:
ac_state	src/cpufreqd_apm.c	/^static unsigned int ac_state;$/;"	v	file:
acpi	src/cpufreqd_acpi.c	/^static struct cpufreqd_plugin acpi = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
acpi_ac_evaluate	src/cpufreqd_acpi_ac.c	/^int acpi_ac_evaluate(const void *s) {$/;"	f
acpi_ac_exit	src/cpufreqd_acpi_ac.c	/^short int acpi_ac_exit(void) {$/;"	f
acpi_ac_failed	src/cpufreqd_acpi.c	/^static short int acpi_ac_failed;$/;"	v	file:
acpi_ac_init	src/cpufreqd_acpi_ac.c	/^short int acpi_ac_init(void) {$/;"	f
acpi_ac_parse	src/cpufreqd_acpi_ac.c	/^int acpi_ac_parse(const char *ev, void **obj) {$/;"	f
acpi_ac_update	src/cpufreqd_acpi_ac.c	/^int acpi_ac_update(void) {$/;"	f
acpi_batt_failed	src/cpufreqd_acpi.c	/^static short int acpi_batt_failed;$/;"	v	file:
acpi_battery_evaluate	src/cpufreqd_acpi_battery.c	/^int acpi_battery_evaluate(const void *s) {$/;"	f
acpi_battery_exit	src/cpufreqd_acpi_battery.c	/^short int acpi_battery_exit(void) {$/;"	f
acpi_battery_init	src/cpufreqd_acpi_battery.c	/^short int acpi_battery_init(void) {$/;"	f
acpi_battery_parse	src/cpufreqd_acpi_battery.c	/^int acpi_battery_parse(const char *ev, void **obj) {$/;"	f
acpi_battery_update	src/cpufreqd_acpi_battery.c	/^int acpi_battery_update(void) {$/;"	f
acpi_conf	src/cpufreqd_acpi.c	/^static int acpi_conf (const char *key, const char *value) {$/;"	f	file:
acpi_config	src/cpufreqd_acpi.c	/^struct acpi_configuration acpi_config;$/;"	v	typeref:struct:acpi_configuration
acpi_configuration	src/cpufreqd_acpi.h	/^struct acpi_configuration {$/;"	s
acpi_ev_failed	src/cpufreqd_acpi.c	/^static short int acpi_ev_failed;$/;"	v	file:
acpi_event	src/cpufreqd_acpi_event.c	/^struct acpi_event {$/;"	s	file:
acpi_event_active	src/cpufreqd_acpi_event.c	/^static int acpi_event_active;$/;"	v	file:
acpi_event_exit	src/cpufreqd_acpi_event.c	/^short int acpi_event_exit (void) {$/;"	f
acpi_event_init	src/cpufreqd_acpi_event.c	/^short int acpi_event_init (void) {$/;"	f
acpi_event_lock	src/cpufreqd_acpi_event.c	/^int acpi_event_lock (void) {$/;"	f
acpi_event_unlock	src/cpufreqd_acpi_event.c	/^int acpi_event_unlock (void) {$/;"	f
acpi_exit	src/cpufreqd_acpi.c	/^static int acpi_exit (void) {$/;"	f	file:
acpi_init	src/cpufreqd_acpi.c	/^static int acpi_init (void) {$/;"	f	file:
acpi_post_conf	src/cpufreqd_acpi.c	/^static int acpi_post_conf (void) {$/;"	f	file:
acpi_temp_failed	src/cpufreqd_acpi.c	/^static short int acpi_temp_failed;$/;"	v	file:
acpi_temperature_evaluate	src/cpufreqd_acpi_temperature.c	/^int acpi_temperature_evaluate(const void *s)$/;"	f
acpi_temperature_exit	src/cpufreqd_acpi_temperature.c	/^short int acpi_temperature_exit(void)$/;"	f
acpi_temperature_init	src/cpufreqd_acpi_temperature.c	/^short int acpi_temperature_init(void)$/;"	f
acpi_temperature_parse	src/cpufreqd_acpi_temperature.c	/^int acpi_temperature_parse(const char *ev, void **obj)$/;"	f
acpi_temperature_update	src/cpufreqd_acpi_temperature.c	/^int acpi_temperature_update(void)$/;"	f
acpi_update	src/cpufreqd_acpi.c	/^static int acpi_update(void) {$/;"	f	file:
acpid_sock_path	src/cpufreqd_acpi.h	/^	char acpid_sock_path[MAX_PATH_LEN];$/;"	m	struct:acpi_configuration
active	utils/getspeed.c	/^	int min, max, active, n;$/;"	l
affected_cpus	src/cpufreqd_plugin.h	/^	struct cpufreq_affected_cpus *affected_cpus;$/;"	m	struct:cpufreq_sys_info	typeref:struct:cpufreq_sys_info::cpufreq_affected_cpus
alarm_handler	src/main.c	/^static void alarm_handler(int signo) {$/;"	f	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__aclocal_m4_deps	manpages/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__aclocal_m4_deps	src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__aclocal_m4_deps	utils/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__append_1	src/Makefile	/^am__append_1 = cpufreqd_acpi.la$/;"	m
am__append_2	src/Makefile	/^am__append_2 = cpufreqd_nforce2.la$/;"	m
am__append_4	src/Makefile	/^am__append_4 = cpufreqd_apm.la$/;"	m
am__append_5	src/Makefile	/^am__append_5 = cpufreqd_pmu.la$/;"	m
am__append_7	src/Makefile	/^am__append_7 = cpufreqd_exec.la$/;"	m
am__append_8	src/Makefile	/^am__append_8 = cpufreqd_governor_parameters.la$/;"	m
am__append_9	src/Makefile	/^am__append_9 = cpufreqd_tau.la$/;"	m
am__base_list	manpages/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/Makefile	/^am__base_list = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	manpages/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	utils/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	manpages/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	utils/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__cpufreqd_acpi_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_acpi_la_SOURCES_DIST = cpufreqd_acpi.c cpufreqd_acpi_ac.c \\$/;"	m
am__cpufreqd_apm_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_apm_la_SOURCES_DIST = cpufreqd_apm.c$/;"	m
am__cpufreqd_exec_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_exec_la_SOURCES_DIST = cpufreqd_exec.c$/;"	m
am__cpufreqd_governor_parameters_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_governor_parameters_la_SOURCES_DIST =  \\$/;"	m
am__cpufreqd_nforce2_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_nforce2_la_SOURCES_DIST = cpufreqd_nforce2.c$/;"	m
am__cpufreqd_nvclock_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_nvclock_la_SOURCES_DIST = cpufreqd_nvclock.c$/;"	m
am__cpufreqd_pmu_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_pmu_la_SOURCES_DIST = cpufreqd_pmu.c$/;"	m
am__cpufreqd_sensors_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_sensors_la_SOURCES_DIST = cpufreqd_sensors.c$/;"	m
am__cpufreqd_tau_la_SOURCES_DIST	src/Makefile	/^am__cpufreqd_tau_la_SOURCES_DIST = cpufreqd_tau.c$/;"	m
am__depfiles_maybe	src/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	utils/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	manpages/Makefile	/^am__include = include$/;"	m
am__include	src/Makefile	/^am__include = include$/;"	m
am__include	utils/Makefile	/^am__include = include$/;"	m
am__install_max	manpages/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	manpages/Makefile	/^am__installdirs = "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)" \\$/;"	m
am__installdirs	src/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(sbindir)"$/;"	m
am__installdirs	utils/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	manpages/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	utils/Makefile	/^am__leading_dot = .$/;"	m
am__mv	src/Makefile	/^am__mv = mv -f$/;"	m
am__mv	utils/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	manpages/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	manpages/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	manpages/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	manpages/Makefile	/^am__quote = $/;"	m
am__quote	src/Makefile	/^am__quote = $/;"	m
am__quote	utils/Makefile	/^am__quote = $/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	manpages/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	manpages/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	src/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	utils/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	manpages/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	src/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	utils/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	manpages/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	manpages/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_cpufreqd_OBJECTS	src/Makefile	/^am_cpufreqd_OBJECTS = main.$(OBJEXT) config_parser.$(OBJEXT) \\$/;"	m
am_cpufreqd_acpi_la_OBJECTS	src/Makefile	/^am_cpufreqd_acpi_la_OBJECTS =  \\$/;"	m
am_cpufreqd_acpi_la_rpath	src/Makefile	/^am_cpufreqd_acpi_la_rpath = -rpath $(libdir)$/;"	m
am_cpufreqd_apm_la_OBJECTS	src/Makefile	/^am_cpufreqd_apm_la_OBJECTS = cpufreqd_apm.lo$/;"	m
am_cpufreqd_apm_la_rpath	src/Makefile	/^am_cpufreqd_apm_la_rpath = -rpath $(libdir)$/;"	m
am_cpufreqd_cpu_la_OBJECTS	src/Makefile	/^am_cpufreqd_cpu_la_OBJECTS = cpufreqd_cpu.lo$/;"	m
am_cpufreqd_exec_la_OBJECTS	src/Makefile	/^am_cpufreqd_exec_la_OBJECTS =  \\$/;"	m
am_cpufreqd_exec_la_rpath	src/Makefile	/^am_cpufreqd_exec_la_rpath = -rpath $(libdir)$/;"	m
am_cpufreqd_get_OBJECTS	utils/Makefile	/^am_cpufreqd_get_OBJECTS = getspeed.$(OBJEXT)$/;"	m
am_cpufreqd_governor_parameters_la_OBJECTS	src/Makefile	/^am_cpufreqd_governor_parameters_la_OBJECTS = cpufreqd_governor_parameters_la-cpufreqd_governor_parameters.lo$/;"	m
am_cpufreqd_governor_parameters_la_rpath	src/Makefile	/^am_cpufreqd_governor_parameters_la_rpath =  \\$/;"	m
am_cpufreqd_nforce2_la_OBJECTS	src/Makefile	/^am_cpufreqd_nforce2_la_OBJECTS =  \\$/;"	m
am_cpufreqd_nforce2_la_rpath	src/Makefile	/^am_cpufreqd_nforce2_la_rpath = -rpath $(libdir)$/;"	m
am_cpufreqd_pmu_la_OBJECTS	src/Makefile	/^am_cpufreqd_pmu_la_OBJECTS = cpufreqd_pmu.lo$/;"	m
am_cpufreqd_pmu_la_rpath	src/Makefile	/^am_cpufreqd_pmu_la_rpath = -rpath $(libdir)$/;"	m
am_cpufreqd_programs_la_OBJECTS	src/Makefile	/^am_cpufreqd_programs_la_OBJECTS = cpufreqd_programs.lo$/;"	m
am_cpufreqd_set_OBJECTS	utils/Makefile	/^am_cpufreqd_set_OBJECTS = setspeed.$(OBJEXT)$/;"	m
am_cpufreqd_tau_la_OBJECTS	src/Makefile	/^am_cpufreqd_tau_la_OBJECTS = cpufreqd_tau.lo$/;"	m
am_cpufreqd_tau_la_rpath	src/Makefile	/^am_cpufreqd_tau_la_rpath = -rpath $(libdir)$/;"	m
apm	src/cpufreqd_apm.c	/^static struct cpufreqd_plugin apm = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
apm_ac_evaluate	src/cpufreqd_apm.c	/^static int apm_ac_evaluate(const void *s) {$/;"	f	file:
apm_ac_parse	src/cpufreqd_apm.c	/^static int apm_ac_parse(const char *ev, void **obj) {$/;"	f	file:
apm_bat_evaluate	src/cpufreqd_apm.c	/^static int apm_bat_evaluate(const void *s) {$/;"	f	file:
apm_bat_parse	src/cpufreqd_apm.c	/^static int apm_bat_parse(const char *ev, void **obj) {$/;"	f	file:
apm_exit	src/cpufreqd_apm.c	/^static int apm_exit(void) {$/;"	f	file:
apm_init	src/cpufreqd_apm.c	/^static int apm_init(void) {$/;"	f	file:
apm_update	src/cpufreqd_apm.c	/^static int apm_update(void) {$/;"	f	file:
argp	src/cpufreqd_log.c	/^	va_list argp;$/;"	l
argp2	src/cpufreqd_log.c	/^	va_list argp2;$/;"	l
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
assigned_cpus	src/config_parser.h	/^	unsigned long assigned_cpus; \/* bit map holding which cpus have been assigned a Profile for this rule *\/$/;"	m	struct:rule
attr	src/cpufreqd_acpi.c	/^	struct sysfs_attribute *attr = NULL;$/;"	l
attr	src/cpufreqd_acpi_ac.c	/^	struct sysfs_attribute *attr = get_class_device_attribute(cdev,$/;"	l
atz_callback	src/cpufreqd_acpi_temperature.c	/^static int atz_callback(struct sysfs_class_device *cdev)$/;"	f	file:
atz_dir_num	src/cpufreqd_acpi_temperature.c	/^static int atz_dir_num;$/;"	v	file:
atz_list	src/cpufreqd_acpi_temperature.c	/^static struct thermal_zone atz_list[64];$/;"	v	typeref:struct:thermal_zone	file:
atz_name	src/cpufreqd_acpi_temperature.c	/^	char atz_name[32];$/;"	l
avg_battery_level	src/cpufreqd_acpi_battery.c	/^static int avg_battery_level;$/;"	v	file:
bat	src/cpufreqd_acpi_battery.c	/^	struct battery_info *bat;$/;"	m	struct:battery_interval	typeref:struct:battery_interval::battery_info	file:
bat_charge	src/cpufreqd_pmu.c	/^	float bat_charge = .0;$/;"	l
bat_dir_num	src/cpufreqd_acpi_battery.c	/^static int bat_dir_num;$/;"	v	file:
bat_max_charge	src/cpufreqd_pmu.c	/^	float bat_max_charge = .0;$/;"	l
batt_flag	src/cpufreqd_apm.c	/^	unsigned int batt_flag;$/;"	l
battery_info	src/cpufreqd_acpi_battery.c	/^struct battery_info {$/;"	s	file:
battery_interval	src/cpufreqd_acpi_battery.c	/^struct battery_interval {$/;"	s	file:
battery_interval	src/cpufreqd_apm.c	/^struct battery_interval {$/;"	s	file:
battery_interval	src/cpufreqd_pmu.c	/^struct battery_interval {$/;"	s	file:
battery_name	src/cpufreqd_acpi_battery.c	/^	char battery_name[32];$/;"	l
battery_percent	src/cpufreqd_apm.c	/^static int battery_percent;$/;"	v	file:
battery_percent	src/cpufreqd_pmu.c	/^static int battery_percent;$/;"	v	file:
battery_present	src/cpufreqd_apm.c	/^static int battery_present;$/;"	v	file:
battery_present	src/cpufreqd_pmu.c	/^static unsigned int battery_present;$/;"	v	file:
battery_update_interval	src/cpufreqd_acpi.h	/^	int battery_update_interval;$/;"	m	struct:acpi_configuration
best_rule	src/main.c	/^	struct rule *best_rule = NULL;$/;"	l
best_score	src/main.c	/^	unsigned int best_score = 0;$/;"	l
bi	src/cpufreqd_acpi_battery.c	/^	const struct battery_interval *bi = (const struct battery_interval *)s;$/;"	l
bi	src/cpufreqd_apm.c	/^	const struct battery_interval *bi = (const struct battery_interval *)s;$/;"	l
bi	src/cpufreqd_pmu.c	/^	const struct battery_interval *bi = (const struct battery_interval *)s;$/;"	l
bin_PROGRAMS	utils/Makefile	/^bin_PROGRAMS = cpufreqd-set$(EXEEXT) cpufreqd-get$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	manpages/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	utils/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
buf	src/config_parser.c	/^	char buf[256];$/;"	l
buf	src/config_parser.c	/^	char buf[MAX_STRING_LEN];$/;"	l
buf	src/cpufreqd_acpi_event.c	/^	char buf[MAX_STRING_LEN];$/;"	l
buf	src/cpufreqd_apm.c	/^	char buf[101];$/;"	l
buf	src/main.c	/^	char buf[MAX_STRING_LEN];$/;"	l
buf	src/sock_utils.c	/^	struct stat buf;$/;"	l
buf	utils/getspeed.c	/^	char buf[4096] = {0}, name[256] = {0}, policy[255] = {0};$/;"	l
buf	utils/setspeed.c	/^	char buf[108];$/;"	l
buflen	src/main.c	/^	unsigned int buflen = 0, counter = 0, i = 0, cpus = 0;$/;"	l
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	manpages/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	utils/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	manpages/Makefile	/^build_alias = $/;"	m
build_alias	src/Makefile	/^build_alias = $/;"	m
build_alias	utils/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	manpages/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	utils/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	manpages/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	utils/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	manpages/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	utils/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_vendor	manpages/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	utils/Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	manpages/Makefile	/^builddir = .$/;"	m
builddir	src/Makefile	/^builddir = .$/;"	m
builddir	utils/Makefile	/^builddir = .$/;"	m
bus_id	src/cpufreqd_acpi_event.c	/^	char *bus_id;$/;"	m	struct:acpi_event	file:
c	src/cpufreqd_cpu.c	/^	const struct cpu_interval *c = (const struct cpu_interval *) s;$/;"	l
c_idle	src/cpufreqd_cpu.c	/^	unsigned int c_idle;$/;"	m	struct:cpu_usage	file:
c_idle	src/cpufreqd_cpu.c	/^	unsigned long int c_idle=0, c_iowait=0, c_irq=0, c_softirq=0; \/* for linux 2.6 only *\/$/;"	l
c_iowait	src/cpufreqd_cpu.c	/^	unsigned long int c_idle=0, c_iowait=0, c_irq=0, c_softirq=0; \/* for linux 2.6 only *\/$/;"	l
c_irq	src/cpufreqd_cpu.c	/^	unsigned long int c_idle=0, c_iowait=0, c_irq=0, c_softirq=0; \/* for linux 2.6 only *\/$/;"	l
c_nice	src/cpufreqd_cpu.c	/^	unsigned int c_nice;$/;"	m	struct:cpu_usage	file:
c_nice	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0, c_user = 0, c_nice = 0, c_sys = 0, i = 0;$/;"	l
c_softirq	src/cpufreqd_cpu.c	/^	unsigned long int c_idle=0, c_iowait=0, c_irq=0, c_softirq=0; \/* for linux 2.6 only *\/$/;"	l
c_sys	src/cpufreqd_cpu.c	/^	unsigned int c_sys;$/;"	m	struct:cpu_usage	file:
c_sys	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0, c_user = 0, c_nice = 0, c_sys = 0, i = 0;$/;"	l
c_time	src/cpufreqd_cpu.c	/^	unsigned int c_time;$/;"	m	struct:cpu_usage	file:
c_user	src/cpufreqd_cpu.c	/^	unsigned int c_user;$/;"	m	struct:cpu_usage	file:
c_user	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0, c_user = 0, c_nice = 0, c_sys = 0, i = 0;$/;"	l
calculate_cpu_usage	src/cpufreqd_cpu.c	/^static int calculate_cpu_usage(struct cpu_usage *cur, struct cpu_usage *old, double nice_scale) {$/;"	f	file:
capacity	src/cpufreqd_acpi_battery.c	/^	int capacity;$/;"	m	struct:battery_info	file:
card	src/cpufreqd_nvclock.c	/^	int card;$/;"	m	struct:nvclock_elem	file:
cdev	src/cpufreqd_acpi.c	/^			struct sysfs_class_device *cdev =$/;"	l
cdev	src/cpufreqd_acpi_battery.c	/^	struct sysfs_class_device *cdev;$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_class_device	file:
cdev	src/cpufreqd_acpi_temperature.c	/^	struct sysfs_class_device *cdev;$/;"	m	struct:thermal_zone	typeref:struct:thermal_zone::sysfs_class_device	file:
ch	src/config_parser.c	/^	char *ch = str;$/;"	l
ch	src/main.c	/^	int ch,option_index = 0;$/;"	l
check	src/main.c	/^				struct cpufreq_policy *check = NULL;$/;"	l
check_timeout	src/cpufreqd_acpi_battery.c	/^static double check_timeout;$/;"	v	file:
child_pid	src/cpufreqd_exec.c	/^	pid_t child_pid = 0;$/;"	l
child_ret	src/cpufreqd_exec.c	/^	int child_ret = 0;$/;"	l
chip	src/cpufreqd_sensors.c	/^	const sensors_chip_name *chip;$/;"	l
chip	src/cpufreqd_sensors.c	/^	const sensors_chip_name *chip;$/;"	m	struct:sensors_monitor	file:
chip_string	src/cpufreqd_sensors.c	/^	char chip_string[MAX_STRING_LEN];$/;"	m	struct:sensors_monitor	file:
ci	src/cpufreqd_cpu.c	/^	struct cpu_interval *ci = (struct cpu_interval *) obj;$/;"	l
cinfo	src/config_parser.c	/^	struct cpufreqd_info *cinfo = get_cpufreqd_info();$/;"	l
cinfo	src/cpufreqd_acpi_battery.c	/^	struct cpufreqd_info * cinfo = get_cpufreqd_info();$/;"	l
cinfo	src/cpufreqd_cpu.c	/^	struct cpufreqd_info *cinfo = get_cpufreqd_info();$/;"	l
cinfo	src/cpufreqd_exec.c	/^	struct cpufreqd_info *cinfo = get_cpufreqd_info();$/;"	l
ckw	src/config_parser.c	/^	struct cpufreqd_keyword *ckw = NULL;$/;"	l
ckw	src/plugin_utils.c	/^	struct cpufreqd_keyword *ckw = NULL;$/;"	l
clean	src/config_parser.c	/^	char *clean = NULL, *name = NULL, *value = NULL;$/;"	l
clean	src/config_parser.c	/^	char *clean = NULL;$/;"	l
clean	src/config_parser.c	/^	char *clean;$/;"	l
clean_config_line	src/config_parser.c	/^static char *clean_config_line (char *str) {$/;"	f	file:
clear_cpufreqd_pid	src/daemon_utils.c	/^int clear_cpufreqd_pid(const char *pidfile) {$/;"	f
clog	src/cpufreqd_log.h	36;"	d
clog	src/cpufreqd_log.h	40;"	d
close_acpi_event	src/cpufreqd_acpi_event.c	/^static void close_acpi_event(void) {$/;"	f	file:
close_battery	src/cpufreqd_acpi_battery.c	/^static void close_battery(struct battery_info *binfo) {$/;"	f	file:
close_plugin	src/plugin_utils.c	/^void close_plugin(struct plugin_obj *cp) {$/;"	f
close_unix_sock	src/sock_utils.c	/^void close_unix_sock(int fd) {$/;"	f
cls	src/cpufreqd_acpi.c	/^	struct sysfs_class *cls = NULL;$/;"	l
clscount	src/cpufreqd_acpi.c	/^	int clscount = 0;$/;"	l
clsdev	src/cpufreqd_acpi.c	/^	struct sysfs_class_device *clsdev = NULL;$/;"	l
clsdev_callback	src/cpufreqd_acpi_battery.c	/^static int clsdev_callback(struct sysfs_class_device *cdev) {$/;"	f	file:
cmd	src/cpufreqd_exec.c	/^	const char *cmd;$/;"	m	struct:exec_cmd	file:
cmd	utils/getspeed.c	/^	unsigned int cmd = 0;$/;"	l
cmd	utils/setspeed.c	/^	unsigned int cmd = 0;$/;"	l
cmp	src/cpufreqd_programs.c	/^	int cmp = 0;$/;"	l
command	src/main.c	/^	uint32_t command = INVALID_CMD;$/;"	l
config	src/cpufreqd_sensors.c	/^	FILE *config = NULL;$/;"	l
config_file	src/config_parser.h	/^	char config_file[MAX_PATH_LEN];$/;"	m	struct:cpufreqd_conf
configuration	src/main.c	/^struct cpufreqd_conf *configuration;$/;"	v	typeref:struct:cpufreqd_conf
configure_plugin	src/config_parser.c	/^static void configure_plugin(FILE *config, struct plugin_obj *plugin) {$/;"	f	file:
configured	src/plugin_utils.h	/^	unsigned int configured;	\/* track if the plugin has$/;"	m	struct:plugin_obj
content	src/list.h	/^	void *content;$/;"	m	struct:NODE
convcheck	src/cpufreqd_governor_parameters.c	/^	char *convcheck;$/;"	l
count	src/cpufreqd_acpi_temperature.c	/^	int count = 0, i = 0;$/;"	l
counter	src/main.c	/^	unsigned int buflen = 0, counter = 0, i = 0, cpus = 0;$/;"	l
cpu	src/config_parser.h	/^	unsigned int cpu;$/;"	m	struct:profile
cpu	src/cpufreqd_cpu.c	/^	unsigned int cpu;$/;"	m	struct:cpu_interval	file:
cpu_cmd	src/cpufreqd_cpu.c	/^	char *cpu_cmd = NULL;$/;"	l
cpu_evaluate	src/cpufreqd_cpu.c	/^static int cpu_evaluate(const void *s) {$/;"	f	file:
cpu_interval	src/cpufreqd_cpu.c	/^struct cpu_interval {$/;"	s	file:
cpu_num	src/config_parser.c	/^		unsigned int cpu_num = 0;$/;"	l
cpu_num	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0, c_user = 0, c_nice = 0, c_sys = 0, i = 0;$/;"	l
cpu_num	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0;$/;"	l
cpu_parse	src/cpufreqd_cpu.c	/^static int cpu_parse(const char *ev, void **obj)$/;"	f	file:
cpu_percent	src/cpufreqd_cpu.c	/^	int cpu_percent = 0;$/;"	l
cpu_plugin	src/cpufreqd_cpu.c	/^static struct cpufreqd_plugin cpu_plugin = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
cpu_usage	src/cpufreqd_cpu.c	/^struct cpu_usage {$/;"	s	file:
cpufreq_limits	src/cpufreqd_plugin.h	/^struct cpufreq_limits {$/;"	s
cpufreq_sys_info	src/cpufreqd_plugin.h	/^struct cpufreq_sys_info {$/;"	s
cpufreqd_LDADD	src/Makefile	/^cpufreqd_LDADD = $(LDADD)$/;"	m
cpufreqd_LDFLAGS	src/Makefile	/^cpufreqd_LDFLAGS = -export-dynamic  -ldl -lcpufreq$/;"	m
cpufreqd_LINK	src/Makefile	/^cpufreqd_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\$/;"	m
cpufreqd_OBJECTS	src/Makefile	/^cpufreqd_OBJECTS = $(am_cpufreqd_OBJECTS)$/;"	m
cpufreqd_SOURCES	src/Makefile	/^cpufreqd_SOURCES = \\$/;"	m
cpufreqd_acpi_la_CFLAGS	src/Makefile	/^cpufreqd_acpi_la_CFLAGS = \\$/;"	m
cpufreqd_acpi_la_LDFLAGS	src/Makefile	/^cpufreqd_acpi_la_LDFLAGS = \\$/;"	m
cpufreqd_acpi_la_LIBADD	src/Makefile	/^cpufreqd_acpi_la_LIBADD =$/;"	m
cpufreqd_acpi_la_LINK	src/Makefile	/^cpufreqd_acpi_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_acpi_la_OBJECTS	src/Makefile	/^cpufreqd_acpi_la_OBJECTS = $(am_cpufreqd_acpi_la_OBJECTS)$/;"	m
cpufreqd_acpi_la_SOURCES	src/Makefile	/^cpufreqd_acpi_la_SOURCES = \\$/;"	m
cpufreqd_apm_la_LDFLAGS	src/Makefile	/^cpufreqd_apm_la_LDFLAGS = \\$/;"	m
cpufreqd_apm_la_LIBADD	src/Makefile	/^cpufreqd_apm_la_LIBADD =$/;"	m
cpufreqd_apm_la_LINK	src/Makefile	/^cpufreqd_apm_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_apm_la_OBJECTS	src/Makefile	/^cpufreqd_apm_la_OBJECTS = $(am_cpufreqd_apm_la_OBJECTS)$/;"	m
cpufreqd_apm_la_SOURCES	src/Makefile	/^cpufreqd_apm_la_SOURCES = \\$/;"	m
cpufreqd_conf	src/config_parser.h	/^struct cpufreqd_conf {$/;"	s
cpufreqd_cpu_exit	src/cpufreqd_cpu.c	/^static int cpufreqd_cpu_exit(void) {$/;"	f	file:
cpufreqd_cpu_init	src/cpufreqd_cpu.c	/^static int cpufreqd_cpu_init(void) {$/;"	f	file:
cpufreqd_cpu_la_LDFLAGS	src/Makefile	/^cpufreqd_cpu_la_LDFLAGS = \\$/;"	m
cpufreqd_cpu_la_LIBADD	src/Makefile	/^cpufreqd_cpu_la_LIBADD =$/;"	m
cpufreqd_cpu_la_LINK	src/Makefile	/^cpufreqd_cpu_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_cpu_la_OBJECTS	src/Makefile	/^cpufreqd_cpu_la_OBJECTS = $(am_cpufreqd_cpu_la_OBJECTS)$/;"	m
cpufreqd_cpu_la_SOURCES	src/Makefile	/^cpufreqd_cpu_la_SOURCES = \\$/;"	m
cpufreqd_dirs	utils/getspeed.c	/^static int cpufreqd_dirs(const struct dirent *d) {$/;"	f	file:
cpufreqd_dirs	utils/setspeed.c	/^static int cpufreqd_dirs(const struct dirent *d) {$/;"	f	file:
cpufreqd_exec_la_CFLAGS	src/Makefile	/^cpufreqd_exec_la_CFLAGS = \\$/;"	m
cpufreqd_exec_la_LDFLAGS	src/Makefile	/^cpufreqd_exec_la_LDFLAGS = \\$/;"	m
cpufreqd_exec_la_LIBADD	src/Makefile	/^cpufreqd_exec_la_LIBADD =$/;"	m
cpufreqd_exec_la_LINK	src/Makefile	/^cpufreqd_exec_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_exec_la_OBJECTS	src/Makefile	/^cpufreqd_exec_la_OBJECTS = $(am_cpufreqd_exec_la_OBJECTS)$/;"	m
cpufreqd_exec_la_SOURCES	src/Makefile	/^cpufreqd_exec_la_SOURCES = \\$/;"	m
cpufreqd_get_LDADD	utils/Makefile	/^cpufreqd_get_LDADD = $(LDADD)$/;"	m
cpufreqd_get_OBJECTS	utils/Makefile	/^cpufreqd_get_OBJECTS = $(am_cpufreqd_get_OBJECTS)$/;"	m
cpufreqd_get_SOURCES	utils/Makefile	/^cpufreqd_get_SOURCES = getspeed.c$/;"	m
cpufreqd_governor_parameters_la_CFLAGS	src/Makefile	/^cpufreqd_governor_parameters_la_CFLAGS = \\$/;"	m
cpufreqd_governor_parameters_la_LDFLAGS	src/Makefile	/^cpufreqd_governor_parameters_la_LDFLAGS = \\$/;"	m
cpufreqd_governor_parameters_la_LIBADD	src/Makefile	/^cpufreqd_governor_parameters_la_LIBADD =$/;"	m
cpufreqd_governor_parameters_la_LINK	src/Makefile	/^cpufreqd_governor_parameters_la_LINK = $(LIBTOOL) --tag=CC \\$/;"	m
cpufreqd_governor_parameters_la_OBJECTS	src/Makefile	/^cpufreqd_governor_parameters_la_OBJECTS =  \\$/;"	m
cpufreqd_governor_parameters_la_SOURCES	src/Makefile	/^cpufreqd_governor_parameters_la_SOURCES = \\$/;"	m
cpufreqd_info	src/cpufreqd_plugin.h	/^struct cpufreqd_info {$/;"	s
cpufreqd_info	src/main.c	/^static struct cpufreqd_info *cpufreqd_info;$/;"	v	typeref:struct:cpufreqd_info	file:
cpufreqd_keyword	src/cpufreqd_plugin.h	/^struct cpufreqd_keyword {$/;"	s
cpufreqd_log	src/cpufreqd_log.c	/^void cpufreqd_log(int prio, const char *fmt, ...) {$/;"	f
cpufreqd_loop	src/main.c	/^static void cpufreqd_loop(struct cpufreqd_conf *conf) {$/;"	f	file:
cpufreqd_mode	src/cpufreqd_plugin.h	/^	int cpufreqd_mode; \/* operation mode (manual \/ dynamic) *\/$/;"	m	struct:cpufreqd_info
cpufreqd_nforce2_la_LDFLAGS	src/Makefile	/^cpufreqd_nforce2_la_LDFLAGS = \\$/;"	m
cpufreqd_nforce2_la_LIBADD	src/Makefile	/^cpufreqd_nforce2_la_LIBADD =$/;"	m
cpufreqd_nforce2_la_LINK	src/Makefile	/^cpufreqd_nforce2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_nforce2_la_OBJECTS	src/Makefile	/^cpufreqd_nforce2_la_OBJECTS = $(am_cpufreqd_nforce2_la_OBJECTS)$/;"	m
cpufreqd_nforce2_la_SOURCES	src/Makefile	/^cpufreqd_nforce2_la_SOURCES = \\$/;"	m
cpufreqd_nvclock_la_LIBADD	src/Makefile	/^cpufreqd_nvclock_la_LIBADD =$/;"	m
cpufreqd_nvclock_la_LINK	src/Makefile	/^cpufreqd_nvclock_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_nvclock_la_OBJECTS	src/Makefile	/^cpufreqd_nvclock_la_OBJECTS = $(am_cpufreqd_nvclock_la_OBJECTS)$/;"	m
cpufreqd_plugin	src/cpufreqd_plugin.h	/^struct cpufreqd_plugin {$/;"	s
cpufreqd_plugin_filter	src/plugin_utils.c	/^static int cpufreqd_plugin_filter(const struct dirent *d) {$/;"	f	file:
cpufreqd_pmu_la_LDFLAGS	src/Makefile	/^cpufreqd_pmu_la_LDFLAGS = \\$/;"	m
cpufreqd_pmu_la_LIBADD	src/Makefile	/^cpufreqd_pmu_la_LIBADD =$/;"	m
cpufreqd_pmu_la_LINK	src/Makefile	/^cpufreqd_pmu_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_pmu_la_OBJECTS	src/Makefile	/^cpufreqd_pmu_la_OBJECTS = $(am_cpufreqd_pmu_la_OBJECTS)$/;"	m
cpufreqd_pmu_la_SOURCES	src/Makefile	/^cpufreqd_pmu_la_SOURCES = \\$/;"	m
cpufreqd_programs_la_LDFLAGS	src/Makefile	/^cpufreqd_programs_la_LDFLAGS = \\$/;"	m
cpufreqd_programs_la_LIBADD	src/Makefile	/^cpufreqd_programs_la_LIBADD =$/;"	m
cpufreqd_programs_la_LINK	src/Makefile	/^cpufreqd_programs_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_programs_la_OBJECTS	src/Makefile	/^cpufreqd_programs_la_OBJECTS = $(am_cpufreqd_programs_la_OBJECTS)$/;"	m
cpufreqd_programs_la_SOURCES	src/Makefile	/^cpufreqd_programs_la_SOURCES = \\$/;"	m
cpufreqd_sensors_la_LIBADD	src/Makefile	/^cpufreqd_sensors_la_LIBADD =$/;"	m
cpufreqd_sensors_la_LINK	src/Makefile	/^cpufreqd_sensors_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_sensors_la_OBJECTS	src/Makefile	/^cpufreqd_sensors_la_OBJECTS = $(am_cpufreqd_sensors_la_OBJECTS)$/;"	m
cpufreqd_set_LDADD	utils/Makefile	/^cpufreqd_set_LDADD = $(LDADD)$/;"	m
cpufreqd_set_OBJECTS	utils/Makefile	/^cpufreqd_set_OBJECTS = $(am_cpufreqd_set_OBJECTS)$/;"	m
cpufreqd_set_SOURCES	utils/Makefile	/^cpufreqd_set_SOURCES = setspeed.c$/;"	m
cpufreqd_set_profile	src/main.c	/^static int cpufreqd_set_profile (struct profile **old, struct profile **new) {$/;"	f	file:
cpufreqd_sock	src/main.c	/^	int cpufreqd_sock = -1, peer_sock = -1; \/* input pipe *\/$/;"	l
cpufreqd_tau_la_LDFLAGS	src/Makefile	/^cpufreqd_tau_la_LDFLAGS = \\$/;"	m
cpufreqd_tau_la_LIBADD	src/Makefile	/^cpufreqd_tau_la_LIBADD =$/;"	m
cpufreqd_tau_la_LINK	src/Makefile	/^cpufreqd_tau_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
cpufreqd_tau_la_OBJECTS	src/Makefile	/^cpufreqd_tau_la_OBJECTS = $(am_cpufreqd_tau_la_OBJECTS)$/;"	m
cpufreqd_tau_la_SOURCES	src/Makefile	/^cpufreqd_tau_la_SOURCES = \\$/;"	m
cpus	src/cpufreqd_plugin.h	/^	unsigned int cpus;$/;"	m	struct:cpufreqd_info
cpus	src/main.c	/^	unsigned int buflen = 0, counter = 0, i = 0, cpus = 0;$/;"	l
create_plugin	src/cpufreqd_acpi.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_apm.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_cpu.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_exec.c	/^struct cpufreqd_plugin *create_plugin(void) {$/;"	f
create_plugin	src/cpufreqd_governor_parameters.c	/^struct cpufreqd_plugin *create_plugin(void)$/;"	f
create_plugin	src/cpufreqd_nforce2.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_nvclock.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_pmu.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_programs.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_sensors.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_plugin	src/cpufreqd_tau.c	/^struct cpufreqd_plugin *create_plugin (void) {$/;"	f
create_temp_dir	src/sock_utils.c	/^char *create_temp_dir(char *buf, gid_t gid) {$/;"	f
cur_freq	src/cpufreqd_nforce2.c	/^static unsigned int cur_freq = 0;$/;"	v	file:
current_now	src/cpufreqd_acpi_battery.c	/^	struct sysfs_attribute *current_now; \/* present rate *\/$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_attribute	file:
current_profiles	src/cpufreqd_plugin.h	/^	struct profile **current_profiles;$/;"	m	struct:cpufreqd_info	typeref:struct:cpufreqd_info::profile
current_rule	src/main.c	/^static struct rule *current_rule;$/;"	v	typeref:struct:rule	file:
current_time	src/cpufreqd_acpi_battery.c	/^	double current_time = 0.0;$/;"	l
cusage	src/cpufreqd_cpu.c	/^static struct cpu_usage *cusage;$/;"	v	typeref:struct:cpu_usage	file:
cusage_old	src/cpufreqd_cpu.c	/^static struct cpu_usage *cusage_old;$/;"	v	typeref:struct:cpu_usage	file:
d	src/main.c	/^	struct directive *d = NULL;$/;"	l
d	src/main.c	/^	struct directive *d;$/;"	l
daemonize	src/daemon_utils.c	/^int daemonize (void) {$/;"	f
data	src/cpufreqd_acpi_event.c	/^	unsigned int data;$/;"	m	struct:acpi_event	file:
data	src/cpufreqd_plugin.h	/^	void *data;$/;"	m	struct:cpufreqd_plugin
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	manpages/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	utils/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	manpages/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	utils/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
debug_tnode	src/cpufreqd_programs.c	/^static void debug_tnode(TNODE *n) {$/;"	f	file:
default_configuration	src/main.c	/^static struct cpufreqd_conf default_configuration = {$/;"	v	typeref:struct:cpufreqd_conf	file:
default_file_path	src/cpufreqd_sensors.c	/^static const char *default_file_path[] =$/;"	v	file:
delete_temp_dir	src/sock_utils.c	/^void delete_temp_dir(const char *dirname) {$/;"	f
delta_activity	src/cpufreqd_cpu.c	/^	unsigned long delta_activity = weighted_activity - weighted_activity_old;$/;"	l
delta_time	src/cpufreqd_cpu.c	/^	unsigned int delta_time;$/;"	m	struct:cpu_usage	file:
depcomp	src/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	utils/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
device_class	src/cpufreqd_acpi_event.c	/^	char *device_class;$/;"	m	struct:acpi_event	file:
devs	src/cpufreqd_acpi.c	/^	struct dlist *devs = NULL;$/;"	l
dir	src/config_parser.c	/^	struct NODE *dir = NULL;$/;"	l
directive	src/config_parser.h	/^struct directive {$/;"	s
directives	src/config_parser.h	/^	struct LIST directives; \/* list of struct directive *\/$/;"	m	struct:profile	typeref:struct:profile::LIST
directives	src/config_parser.h	/^	struct LIST directives; \/* list of struct directive *\/$/;"	m	struct:rule	typeref:struct:rule::LIST
directives	src/main.c	/^	unsigned int hits = 0, directives = 0;$/;"	l
directives_count	src/config_parser.h	/^	unsigned int directives_count;$/;"	m	struct:profile
directives_count	src/config_parser.h	/^	unsigned int directives_count;$/;"	m	struct:rule
dirname	src/main.c	/^	char dirname[MAX_PATH_LEN];$/;"	l
discover_plugins	src/plugin_utils.c	/^void discover_plugins(struct LIST *plugins) {$/;"	f
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dlist_for_each_data	src/cpufreqd_acpi.c	/^	dlist_for_each_data(devs, clsdev, struct sysfs_class_device) {$/;"	f
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	manpages/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	utils/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
double_check	src/config_parser.h	/^	unsigned int double_check;$/;"	m	struct:cpufreqd_conf
down_threshold_parse	src/cpufreqd_governor_parameters.c	/^static int down_threshold_parse(const char *value, void **obj)$/;"	f	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	manpages/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	utils/Makefile	/^dvidir = ${docdir}$/;"	m
elapsed_time	src/cpufreqd_acpi_battery.c	/^	double elapsed_time = 0.0;$/;"	l
enable_remote	src/config_parser.h	/^	unsigned int enable_remote;$/;"	m	struct:cpufreqd_conf
endptr	utils/setspeed.c	/^	char *endptr = NULL;$/;"	l
endtag	src/config_parser.c	/^	char endtag[MAX_STRING_LEN];$/;"	l
energy_full	src/cpufreqd_acpi_battery.c	/^	struct sysfs_attribute *energy_full; \/* last full capacity *\/$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_attribute	file:
energy_now	src/cpufreqd_acpi_battery.c	/^	struct sysfs_attribute *energy_now; \/* remaining capacity *\/$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_attribute	file:
error	src/plugin_utils.c	/^	const char* error;$/;"	l
etemp	src/cpufreqd_exec.c	/^	struct exec_cmd *etemp = NULL;$/;"	l
evaluate	src/cpufreqd_plugin.h	/^	int (*evaluate) (const void *obj);$/;"	m	struct:cpufreqd_keyword
event_fd	src/cpufreqd_acpi_event.c	/^static int event_fd;$/;"	v	file:
event_mutex	src/cpufreqd_acpi_event.c	/^static pthread_mutex_t event_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
event_pending	src/cpufreqd_acpi_event.c	/^static short event_pending;$/;"	v	file:
event_thread	src/cpufreqd_acpi_event.c	/^static pthread_t event_thread;$/;"	v	file:
event_wait	src/cpufreqd_acpi_event.c	/^static void *event_wait (void __UNUSED__ *arg) {$/;"	f	file:
exe_exit_cmd	src/cpufreqd_exec.c	/^static struct exec_cmd exe_exit_cmd = { .cmd = "", .next = NULL };$/;"	v	typeref:struct:exec_cmd	file:
exe_q	src/cpufreqd_exec.c	/^static struct exec_cmd *exe_q;$/;"	v	typeref:struct:exec_cmd	file:
exe_q_cond	src/cpufreqd_exec.c	/^static pthread_cond_t exe_q_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
exe_q_mtx	src/cpufreqd_exec.c	/^static pthread_mutex_t exe_q_mtx = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
exe_thread	src/cpufreqd_exec.c	/^static pthread_t exe_thread;$/;"	v	file:
exec_cmd	src/cpufreqd_exec.c	/^struct exec_cmd {$/;"	s	file:
exec_enqueue	src/cpufreqd_exec.c	/^static void exec_enqueue (const char *cmd) {$/;"	f	file:
exec_exit	src/cpufreqd_exec.c	/^static int exec_exit (void) {$/;"	f	file:
exec_init	src/cpufreqd_exec.c	/^static int exec_init (void) {$/;"	f	file:
exec_parse	src/cpufreqd_exec.c	/^static int exec_parse (const char *line, void **obj) {$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = \/usr\/local$/;"	m
exec_prefix	manpages/Makefile	/^exec_prefix = \/usr\/local$/;"	m
exec_prefix	src/Makefile	/^exec_prefix = \/usr\/local$/;"	m
exec_prefix	utils/Makefile	/^exec_prefix = \/usr\/local$/;"	m
exec_profile_post_change	src/cpufreqd_exec.c	/^static void exec_profile_post_change(void *obj,$/;"	f	file:
exec_profile_pre_change	src/cpufreqd_exec.c	/^static void exec_profile_pre_change(void __UNUSED__ *obj,$/;"	f	file:
exec_rule_change	src/cpufreqd_exec.c	/^static void exec_rule_change(void *obj,$/;"	f	file:
exec_update	src/cpufreqd_exec.c	/^static int exec_update(void) {$/;"	f	file:
execute_command	src/main.c	/^static void execute_command(int sock, struct cpufreqd_conf *conf) {$/;"	f	file:
f	src/cpufreqd_cpu.c	/^	int f = 0;$/;"	l
f	src/main.c	/^	int f = 0;$/;"	l
fd	src/daemon_utils.c	/^			FILE *fd;$/;"	l
fd	src/sock_utils.c	/^	int fd = -1;$/;"	l
fds	src/main.c	/^	struct pollfd fds;$/;"	l
feat	src/cpufreqd_sensors.c	/^	const sensors_feature *feat;$/;"	l
feat	src/cpufreqd_sensors.c	/^	const sensors_feature *feat;$/;"	m	struct:sensors_monitor	file:
file	src/cpufreqd_programs.c	/^	char file[PRG_LENGTH];$/;"	l
filename	src/sock_utils.c	/^	char filename[MAX_PATH_LEN];$/;"	l
finalize_plugin	src/plugin_utils.c	/^int finalize_plugin(struct plugin_obj *cp) {$/;"	f
find_class_device	src/cpufreqd_acpi.c	/^int find_class_device(const char *clsname, const char *devtype,$/;"	f
find_program	src/cpufreqd_programs.c	/^static int find_program(const TNODE *l) {$/;"	f	file:
find_tnode	src/cpufreqd_programs.c	/^static TNODE * find_tnode(TREE *t, const char *c) {$/;"	f	file:
first	src/list.h	/^	struct NODE *first;$/;"	m	struct:LIST	typeref:struct:LIST::NODE
force_exit	src/main.c	/^static int force_exit = 0;$/;"	v	file:
force_reinit	src/main.c	/^static int force_reinit = 0;$/;"	v	file:
fp	src/cpufreq_utils.c	/^	FILE *fp;$/;"	l
fp	src/cpufreqd_apm.c	/^	FILE *fp;$/;"	l
fp	src/cpufreqd_cpu.c	/^	FILE* fp = NULL;$/;"	l
fp	src/cpufreqd_nforce2.c	/^		FILE *fp = fopen(vcore_path, "w");$/;"	l
fp	src/cpufreqd_pmu.c	/^	FILE *fp;$/;"	l
fp	src/cpufreqd_programs.c	/^	FILE *fp;$/;"	l
fp	src/cpufreqd_tau.c	/^	FILE *fp;$/;"	l
fp	src/main.c	/^	FILE *fp;$/;"	l
fp_config	src/config_parser.c	/^	FILE *fp_config = NULL;$/;"	l
free	src/cpufreqd_plugin.h	/^	void (*free) (void *obj);$/;"	m	struct:cpufreqd_keyword
free_configuration	src/config_parser.c	/^void free_configuration(struct cpufreqd_conf *configuration)$/;"	f
free_cpu_intervals	src/cpufreqd_cpu.c	/^static void free_cpu_intervals(void *obj) {$/;"	f	file:
free_keyword_object	src/plugin_utils.c	/^void free_keyword_object(struct cpufreqd_keyword *k, void *obj) {$/;"	f
free_tnode	src/cpufreqd_programs.c	/^static void free_tnode(TNODE *n) {$/;"	f	file:
free_tree	src/cpufreqd_programs.c	/^static void free_tree(TREE *t) {$/;"	f	file:
freq_step_parse	src/cpufreqd_governor_parameters.c	/^static int freq_step_parse(const char *value, void **obj)$/;"	f	file:
frequencies	src/cpufreqd_plugin.h	/^	struct cpufreq_available_frequencies *frequencies;$/;"	m	struct:cpufreq_sys_info	typeref:struct:cpufreq_sys_info::cpufreq_available_frequencies
full_cmd	utils/getspeed.c	/^	unsigned int full_cmd = 0;$/;"	l
func_append	config.status	/^func_append ()$/;"	f
func_append	configure	/^func_append ()$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_arith	config.status	/^func_arith ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_dirname	config.status	/^func_dirname ()$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper_part1	libtool	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part1	ltmain.sh	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part2	libtool	/^func_emit_wrapper_part2 ()$/;"	f
func_emit_wrapper_part2	ltmain.sh	/^func_emit_wrapper_part2 ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_opt_split	config.status	/^func_opt_split ()$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_opt_split	libtool	/^func_opt_split ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_stripname	config.status	/^func_stripname ()$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	libtool	/^func_to_host_pathlist ()$/;"	f
func_to_host_pathlist	ltmain.sh	/^func_to_host_pathlist ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
get_battery_info	src/cpufreqd_acpi_battery.c	/^static struct battery_info *get_battery_info(const char *name)$/;"	f	file:
get_class_device_attribute	src/cpufreqd_acpi.c	/^struct sysfs_attribute *get_class_device_attribute(struct sysfs_class_device *clsdev,$/;"	f
get_cpu	src/cpufreqd_cpu.c	/^static int get_cpu(void) {$/;"	f	file:
get_cpu_num	src/cpufreq_utils.c	/^int get_cpu_num(void) {$/;"	f
get_cpufreqd_info	src/main.c	/^struct cpufreqd_info * get_cpufreqd_info (void) {$/;"	f
get_cpufreqd_object	src/plugin_utils.c	/^int get_cpufreqd_object(struct plugin_obj *cp) {$/;"	f
get_kversion	src/main.c	/^static int get_kversion(void) {$/;"	f	file:
get_max_available_freq	src/cpufreq_utils.c	/^unsigned long get_max_available_freq(struct cpufreq_available_frequencies *freqs) {$/;"	f
get_min_available_freq	src/cpufreq_utils.c	/^unsigned long get_min_available_freq(struct cpufreq_available_frequencies *freqs) {$/;"	f
get_parameter	src/cpufreqd_governor_parameters.c	/^static long int get_parameter(struct sysfs_device *govdev, const char *parameter)$/;"	f	file:
get_thermal_zone	src/cpufreqd_acpi_temperature.c	/^static struct thermal_zone *get_thermal_zone(const char *name)$/;"	f	file:
gid	src/config_parser.c	/^	long int gid = 0;$/;"	l
gov_parameter	src/cpufreqd_governor_parameters.c	/^struct gov_parameter {$/;"	s	file:
gov_parameter_exit	src/cpufreqd_governor_parameters.c	/^static int gov_parameter_exit(void)$/;"	f	file:
gov_parameter_init	src/cpufreqd_governor_parameters.c	/^static int gov_parameter_init(void)$/;"	f	file:
gov_parameter_post_change	src/cpufreqd_governor_parameters.c	/^static void gov_parameter_post_change(void *obj, const struct cpufreq_policy *not_needed,$/;"	f	file:
govattr	src/cpufreqd_governor_parameters.c	/^	struct sysfs_attribute *govattr = NULL;$/;"	l
govdev	src/cpufreqd_governor_parameters.c	/^	struct sysfs_device *govdev = NULL;$/;"	l
govdev_path	src/cpufreqd_governor_parameters.c	/^	char govdev_path[SYSFS_PATH_MAX];$/;"	l
governor_parameter	src/cpufreqd_governor_parameters.c	/^static struct cpufreqd_plugin governor_parameter = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
governors	src/cpufreqd_plugin.h	/^	struct cpufreq_available_governors *governors;$/;"	m	struct:cpufreq_sys_info	typeref:struct:cpufreq_sys_info::cpufreq_available_governors
grp	src/config_parser.c	/^	struct group *grp = NULL;$/;"	l
has_sysfs	src/config_parser.h	/^	unsigned int has_sysfs;$/;"	m	struct:cpufreqd_conf
height	src/cpufreqd_programs.c	/^	unsigned short height;$/;"	m	struct:TNODE	file:
higher	src/cpufreq_utils.c	/^	unsigned long higher=0L, lower=0L;$/;"	l
hits	src/main.c	/^	unsigned int hits = 0, directives = 0;$/;"	l
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	manpages/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	utils/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	manpages/Makefile	/^host_alias = $/;"	m
host_alias	src/Makefile	/^host_alias = $/;"	m
host_alias	utils/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	manpages/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	utils/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	manpages/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	utils/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	manpages/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	utils/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	manpages/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	utils/Makefile	/^host_vendor = unknown$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	manpages/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	utils/Makefile	/^htmldir = ${docdir}$/;"	m
hup_handler	src/main.c	/^static void hup_handler(int signo) {$/;"	f	file:
i	src/config_parser.c	/^	int i;$/;"	l
i	src/config_parser.c	/^	unsigned int i = 0;$/;"	l
i	src/cpufreqd_acpi_ac.c	/^	int i = 0;$/;"	l
i	src/cpufreqd_acpi_battery.c	/^	int i = 0, total_capacity = 0, total_remaining = 0, n_read = 0;$/;"	l
i	src/cpufreqd_acpi_battery.c	/^	int i;$/;"	l
i	src/cpufreqd_acpi_temperature.c	/^	int count = 0, i = 0;$/;"	l
i	src/cpufreqd_acpi_temperature.c	/^	int i;$/;"	l
i	src/cpufreqd_cpu.c	/^	unsigned int cpu_num = 0, c_user = 0, c_nice = 0, c_sys = 0, i = 0;$/;"	l
i	src/cpufreqd_cpu.c	/^	unsigned int i = 0;$/;"	l
i	src/cpufreqd_governor_parameters.c	/^	int i, j;$/;"	l
i	src/cpufreqd_governor_parameters.c	/^	int i;$/;"	l
i	src/cpufreqd_programs.c	/^	unsigned int i=0;$/;"	l
i	src/cpufreqd_sensors.c	/^	int i;$/;"	l
i	src/main.c	/^	unsigned int buflen = 0, counter = 0, i = 0, cpus = 0;$/;"	l
i	src/main.c	/^	unsigned int i = 0;$/;"	l
i	src/main.c	/^	unsigned int i;$/;"	l
i	utils/getspeed.c	/^	unsigned int i = 0;$/;"	l
ignore	src/cpufreqd_apm.c	/^	int ignore;$/;"	l
ignore2	src/cpufreqd_apm.c	/^	unsigned int ignore2;$/;"	l
ignore3	src/cpufreqd_apm.c	/^	char ignore3[101];$/;"	l
ignore_nice_load_parse	src/cpufreqd_governor_parameters.c	/^static int ignore_nice_load_parse(const char *value, void **obj)$/;"	f	file:
ignore_nice_parse	src/cpufreqd_governor_parameters.c	/^static int ignore_nice_parse(const char *value, void **obj)$/;"	f	file:
in	utils/getspeed.c	/^	char *in;$/;"	l
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	manpages/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	utils/Makefile	/^includedir = ${prefix}\/include$/;"	m
info	src/cpufreqd_acpi_battery.c	/^static struct battery_info info[8];$/;"	v	typeref:struct:battery_info	file:
info	src/cpufreqd_governor_parameters.c	/^	struct cpufreqd_info const *info;$/;"	l
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	manpages/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	utils/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init_configuration	src/config_parser.c	/^int init_configuration(struct cpufreqd_conf *configuration)$/;"	f
init_success	src/cpufreqd_sensors.c	/^static int init_success;$/;"	v	file:
initialize_plugin	src/plugin_utils.c	/^int initialize_plugin(struct plugin_obj *cp) {$/;"	f
insert_tnode	src/cpufreqd_programs.c	/^static void insert_tnode(TREE **t, const char *c) {$/;"	f	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/install-sh$/;"	m
install_sh	manpages/Makefile	/^install_sh = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/install-sh$/;"	m
install_sh	src/Makefile	/^install_sh = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/install-sh$/;"	m
install_sh	utils/Makefile	/^install_sh = ${SHELL} \/home\/parth\/Downloads\/cpufreqd-2.4.1\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	manpages/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	utils/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	manpages/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	utils/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	manpages/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	utils/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int_handler	src/main.c	/^static void int_handler(int signo) {$/;"	f	file:
is_active	utils/getspeed.c	/^		int is_active = 0;$/;"	l
is_event_pending	src/cpufreqd_acpi_event.c	/^int is_event_pending(void) {$/;"	f
is_percentage	src/cpufreqd_governor_parameters.c	/^	int is_percentage;$/;"	l
is_percentage	src/cpufreqd_governor_parameters.c	/^	short int is_percentage;$/;"	m	struct:gov_parameter	file:
is_present	src/cpufreqd_acpi_battery.c	/^	int is_present;$/;"	m	struct:battery_info	file:
j	src/cpufreqd_governor_parameters.c	/^	int i, j;$/;"	l
kernel_version	src/cpufreqd_cpu.c	/^static unsigned int kernel_version;$/;"	v	file:
kernel_version	src/cpufreqd_plugin.h	/^	unsigned int kernel_version;$/;"	m	struct:cpufreqd_info
keyword	src/config_parser.h	/^	struct cpufreqd_keyword *keyword;$/;"	m	struct:directive	typeref:struct:directive::cpufreqd_keyword
keywords	src/cpufreqd_plugin.h	/^	struct cpufreqd_keyword *keywords;$/;"	m	struct:cpufreqd_plugin	typeref:struct:cpufreqd_plugin::cpufreqd_keyword
kver	src/main.c	/^	char kver[256];$/;"	l
kw	src/cpufreqd_acpi.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_apm.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_cpu.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_exec.c	/^static struct cpufreqd_keyword kw[] =  {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_governor_parameters.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_nforce2.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_nvclock.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_pmu.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_programs.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
kw	src/cpufreqd_sensors.c	/^static struct cpufreqd_keyword kw[] = {$/;"	l	file:
kw	src/cpufreqd_tau.c	/^static struct cpufreqd_keyword kw[] = {$/;"	v	typeref:struct:cpufreqd_keyword	file:
label	src/cpufreqd_sensors.c	/^		char *label = NULL;$/;"	l
last	src/list.h	/^	struct NODE *last;$/;"	m	struct:LIST	typeref:struct:LIST::NODE
last_mtime	utils/getspeed.c	/^	time_t last_mtime = 0;$/;"	l
last_mtime	utils/setspeed.c	/^	time_t last_mtime = 0;$/;"	l
left	src/cpufreqd_programs.c	/^	struct TNODE *left;$/;"	m	struct:TNODE	typeref:struct:TNODE::TNODE	file:
level	src/cpufreqd_acpi_battery.c	/^	int level = avg_battery_level;$/;"	l
level	src/cpufreqd_acpi_battery.c	/^	int level; \/* computed percentage *\/$/;"	m	struct:battery_info	file:
lib_LTLIBRARIES	src/Makefile	/^lib_LTLIBRARIES = $(BUILD_PLUGINS)$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	manpages/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	utils/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	manpages/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	utils/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libname	src/plugin_utils.c	/^	char libname[512];$/;"	l
library	src/plugin_utils.h	/^	void *library;$/;"	m	struct:plugin_obj
limit_vcore	src/cpufreqd_nforce2.c	/^static int limit_vcore(int read_vcore)$/;"	f	file:
limited_vcore	src/cpufreqd_nforce2.c	/^		int limited_vcore = (read_vcore < min_vcore) ? min_vcore : max_vcore;$/;"	l
limits	src/cpufreqd_plugin.h	/^	struct cpufreq_limits *limits;$/;"	m	struct:cpufreqd_info	typeref:struct:cpufreqd_info::cpufreq_limits
line	src/cpufreq_utils.c	/^	char line[256];$/;"	l
line	src/cpufreqd_cpu.c	/^	char line[256];$/;"	l
list	src/cpufreqd_sensors.c	/^	struct sensors_monitor *list = monitor_list;$/;"	l
list_append	src/list.c	/^void list_append(struct LIST *l, struct NODE *n) {$/;"	f
list_free_sublist	src/list.c	/^int list_free_sublist(struct LIST *l, struct NODE *n) {$/;"	f
list_new	src/list.c	/^struct LIST *list_new(void) {$/;"	f
list_remove_node	src/list.c	/^struct NODE *list_remove_node(struct LIST *l, struct NODE *nd) {$/;"	f
load_plugin	src/plugin_utils.c	/^int load_plugin(struct plugin_obj *cp) {$/;"	f
load_plugin_list	src/plugin_utils.c	/^void load_plugin_list(struct LIST *plugins) {$/;"	f
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	manpages/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	utils/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	manpages/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	utils/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
log_level	src/config_parser.h	/^	int log_level;$/;"	m	struct:cpufreqd_conf
log_level_overridden	src/config_parser.h	/^	unsigned int log_level_overridden;$/;"	m	struct:cpufreqd_conf
log_opened	src/cpufreqd_log.c	/^static unsigned int log_opened; \/* syslog already opened *\/$/;"	v	file:
long_options	src/main.c	/^	static struct option long_options[] = {$/;"	l	file:
loop	src/cpufreqd_exec.c	/^	struct exec_cmd *loop = NULL;$/;"	l
lower	src/cpufreq_utils.c	/^	unsigned long higher=0L, lower=0L;$/;"	l
lt_ECHO	Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	manpages/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	src/Makefile	/^lt_ECHO = echo$/;"	m
lt_ECHO	utils/Makefile	/^lt_ECHO = echo$/;"	m
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	src/main.c	/^int main (int argc, char *argv[]) {$/;"	f
main	utils/getspeed.c	/^int main(int argc, char *argv[])$/;"	f
main	utils/setspeed.c	/^int main(int argc, char *argv[])$/;"	f
mains	src/cpufreqd_acpi_ac.c	/^static struct sysfs_attribute *mains[64];$/;"	v	typeref:struct:sysfs_attribute	file:
mains_callback	src/cpufreqd_acpi_ac.c	/^static int mains_callback(struct sysfs_class_device *cdev) {$/;"	f	file:
man1dir	manpages/Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man5dir	manpages/Makefile	/^man5dir = $(mandir)\/man5$/;"	m
man8dir	manpages/Makefile	/^man8dir = $(mandir)\/man8$/;"	m
man_MANS	manpages/Makefile	/^man_MANS = cpufreqd.8 cpufreqd.conf.5 cpufreqd-get.1 cpufreqd-set.1$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	manpages/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	utils/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
max	src/cpufreq_utils.c	/^	unsigned long max = 0;$/;"	l
max	src/cpufreqd_acpi_battery.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
max	src/cpufreqd_acpi_temperature.c	/^	int min, max;$/;"	m	struct:temperature_interval	file:
max	src/cpufreqd_apm.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
max	src/cpufreqd_cpu.c	/^	int max = 0;$/;"	l
max	src/cpufreqd_cpu.c	/^	int max;$/;"	m	struct:cpu_interval	file:
max	src/cpufreqd_governor_parameters.c	/^		long int min, max;$/;"	l
max	src/cpufreqd_plugin.h	/^	unsigned long max;$/;"	m	struct:cpufreq_limits
max	src/cpufreqd_pmu.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
max	src/cpufreqd_sensors.c	/^	double max;$/;"	m	struct:sensor_object	file:
max	src/cpufreqd_tau.c	/^	int min, max;$/;"	m	struct:temperature_interval	file:
max	utils/getspeed.c	/^	int min, max, active, n;$/;"	l
max_is_percent	src/config_parser.c	/^	int state = 0, min_is_percent = 0, max_is_percent = 0, tmp_freq = 0;$/;"	l
max_name	src/cpufreqd_governor_parameters.c	/^		char max_name[SYSFS_NAME_LEN];$/;"	l
max_vcore	src/cpufreqd_nforce2.c	/^static const int max_vcore = 1850;$/;"	v	file:
min	src/cpufreq_utils.c	/^	unsigned long min = 0;$/;"	l
min	src/cpufreqd_acpi_battery.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
min	src/cpufreqd_acpi_temperature.c	/^	int min, max;$/;"	m	struct:temperature_interval	file:
min	src/cpufreqd_apm.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
min	src/cpufreqd_cpu.c	/^	int min = 0;$/;"	l
min	src/cpufreqd_cpu.c	/^	int min;$/;"	m	struct:cpu_interval	file:
min	src/cpufreqd_governor_parameters.c	/^		long int min, max;$/;"	l
min	src/cpufreqd_plugin.h	/^	unsigned long min;$/;"	m	struct:cpufreq_limits
min	src/cpufreqd_pmu.c	/^	int min, max;$/;"	m	struct:battery_interval	file:
min	src/cpufreqd_sensors.c	/^	double min;$/;"	m	struct:sensor_object	file:
min	src/cpufreqd_tau.c	/^	int min, max;$/;"	m	struct:temperature_interval	file:
min	utils/getspeed.c	/^	int min, max, active, n;$/;"	l
min_is_percent	src/config_parser.c	/^	int state = 0, min_is_percent = 0, max_is_percent = 0, tmp_freq = 0;$/;"	l
min_name	src/cpufreqd_governor_parameters.c	/^		char min_name[SYSFS_NAME_LEN];$/;"	l
min_vcore	src/cpufreqd_nforce2.c	/^static const int min_vcore = 1200;$/;"	v	file:
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	manpages/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	src/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkdir_p	utils/Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	manpages/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	utils/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
monitor	src/cpufreqd_sensors.c	/^	struct sensors_monitor *monitor;$/;"	m	struct:sensor_object	typeref:struct:sensor_object::sensors_monitor	file:
monitor_list	src/cpufreqd_sensors.c	/^static struct sensors_monitor *monitor_list;$/;"	v	typeref:struct:sensors_monitor	file:
multiplier	src/cpufreqd_governor_parameters.c	/^	int multiplier;$/;"	l
n	src/config_parser.c	/^	struct NODE *n = NULL;$/;"	l
n	src/cpufreq_utils.c	/^	int n;$/;"	l
n	src/cpufreqd_programs.c	/^	int n = 0, ret = 0, pid = 0;$/;"	l
n	src/plugin_utils.c	/^	int n = 0;$/;"	l
n	src/plugin_utils.c	/^	struct NODE *n = NULL;$/;"	l
n	utils/getspeed.c	/^	int min, max, active, n;$/;"	l
n	utils/setspeed.c	/^	long int n = 0;$/;"	l
n_plugin	src/plugin_utils.c	/^	struct NODE *n_plugin;$/;"	l
n_read	src/cpufreqd_acpi_battery.c	/^	int i = 0, total_capacity = 0, total_remaining = 0, n_read = 0;$/;"	l
name	src/config_parser.c	/^	char *clean = NULL, *name = NULL, *value = NULL;$/;"	l
name	src/config_parser.c	/^	char *name;$/;"	l
name	src/config_parser.h	/^	char name[MAX_STRING_LEN];$/;"	m	struct:profile
name	src/config_parser.h	/^	char name[MAX_STRING_LEN];$/;"	m	struct:rule
name	src/cpufreqd_programs.c	/^	char name[PRG_LENGTH];$/;"	m	struct:TNODE	file:
name	src/cpufreqd_sensors.c	/^	char name[MAX_STRING_LEN];$/;"	m	struct:sensor_object	file:
name	src/cpufreqd_sensors.c	/^	static char name[MAX_STRING_LEN];$/;"	l	file:
name	src/plugin_utils.h	/^	char name[256];$/;"	m	struct:plugin_obj
name	utils/getspeed.c	/^	char buf[4096] = {0}, name[256] = {0}, policy[255] = {0};$/;"	l
namelist	src/cpufreqd_programs.c	/^	struct dirent **namelist;$/;"	l
namelist	src/plugin_utils.c	/^	struct dirent **namelist;$/;"	l
namelist	utils/getspeed.c	/^	struct dirent **namelist = NULL;$/;"	l
namelist	utils/setspeed.c	/^	struct dirent **namelist = NULL;$/;"	l
neglect_node	src/cpufreqd_programs.c	/^static void neglect_node(TNODE **n) {$/;"	f	file:
new_profile	src/main.c	/^	struct profile *old_profile = NULL, *new_profile = NULL;$/;"	l
new_timer	src/main.c	/^		struct itimerval new_timer;$/;"	l
new_tnode	src/cpufreqd_programs.c	/^static TNODE * new_tnode(void) {$/;"	f	file:
next	src/cpufreqd_acpi_event.c	/^	struct acpi_event *next;$/;"	m	struct:acpi_event	typeref:struct:acpi_event::acpi_event	file:
next	src/cpufreqd_cpu.c	/^	struct cpu_interval *next;$/;"	m	struct:cpu_interval	typeref:struct:cpu_interval::cpu_interval	file:
next	src/cpufreqd_exec.c	/^	struct exec_cmd *next;$/;"	m	struct:exec_cmd	typeref:struct:exec_cmd::exec_cmd	file:
next	src/cpufreqd_sensors.c	/^	struct sensors_monitor *next;$/;"	m	struct:sensors_monitor	typeref:struct:sensors_monitor::sensors_monitor	file:
next	src/list.h	/^	struct NODE *next;$/;"	m	struct:NODE	typeref:struct:NODE::NODE
nforce2	src/cpufreqd_nforce2.c	/^static struct cpufreqd_plugin nforce2 = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
nforce2_conf	src/cpufreqd_nforce2.c	/^static int nforce2_conf(const char *key, const char *value) {$/;"	f	file:
nforce2_exit	src/cpufreqd_nforce2.c	/^static int nforce2_exit(void) {$/;"	f	file:
nforce2_post_conf	src/cpufreqd_nforce2.c	/^static int nforce2_post_conf(void) {$/;"	f	file:
nforce2_update	src/cpufreqd_nforce2.c	/^static int nforce2_update(void) {$/;"	f	file:
nice_scale	src/cpufreqd_cpu.c	/^	float nice_scale = 0.0f;$/;"	l
nice_scale	src/cpufreqd_cpu.c	/^	float nice_scale;$/;"	m	struct:cpu_interval	file:
no_daemon	src/config_parser.h	/^	unsigned int no_daemon;$/;"	m	struct:cpufreqd_conf
node	src/plugin_utils.c	/^	struct NODE *node = NULL;$/;"	l
node_free	src/list.c	/^void node_free(struct NODE *n) {$/;"	f
node_new	src/list.c	/^struct NODE *node_new(void *cnt, size_t s) {$/;"	f
noinst_HEADERS	src/Makefile	/^noinst_HEADERS = \\$/;"	m
normalize_frequency	src/cpufreq_utils.c	/^unsigned long normalize_frequency (struct cpufreq_limits *limits,$/;"	f
nr	src/cpufreqd_sensors.c	/^	int nr = 0, nr1 = 0;$/;"	l
nr1	src/cpufreqd_sensors.c	/^	int nr = 0, nr1 = 0;$/;"	l
nr2	src/cpufreqd_sensors.c	/^	int nr2 = 0;$/;"	l
number_of_cpus	src/cpufreqd_governor_parameters.c	/^static unsigned int number_of_cpus = 1;$/;"	v	file:
numeric_entry	src/cpufreqd_programs.c	/^static int numeric_entry(const struct dirent *d) {$/;"	f	file:
nvclock_elem	src/cpufreqd_nvclock.c	/^struct nvclock_elem {$/;"	s	file:
nvclock_init	src/cpufreqd_nvclock.c	/^static int nvclock_init(void) {$/;"	f	file:
nvclock_parse	src/cpufreqd_nvclock.c	/^static int nvclock_parse(const char *ev, void **obj) {$/;"	f	file:
nvclock_plugin	src/cpufreqd_nvclock.c	/^static struct cpufreqd_plugin nvclock_plugin = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
nvcore_change	src/cpufreqd_nvclock.c	/^static void nvcore_change(struct nvclock_elem *nv) {$/;"	f	file:
nvcore_profile_calls	src/cpufreqd_nvclock.c	/^int nvcore_profile_calls;$/;"	v
nvcore_profile_post_change	src/cpufreqd_nvclock.c	/^static void nvcore_profile_post_change(void *obj,$/;"	f	file:
nvcore_profile_pre_change	src/cpufreqd_nvclock.c	/^static void nvcore_profile_pre_change(void __UNUSED__ *obj,$/;"	f	file:
nvcore_rule_post_change	src/cpufreqd_nvclock.c	/^static void nvcore_rule_post_change(void *obj,$/;"	f	file:
nvmem_change	src/cpufreqd_nvclock.c	/^static void nvmem_change(struct nvclock_elem *nv) {$/;"	f	file:
nvmem_profile_calls	src/cpufreqd_nvclock.c	/^int nvmem_profile_calls;$/;"	v
nvmem_profile_post_change	src/cpufreqd_nvclock.c	/^static void nvmem_profile_post_change(void *obj,$/;"	f	file:
nvmem_profile_pre_change	src/cpufreqd_nvclock.c	/^static void nvmem_profile_pre_change(void __UNUSED__ *obj,$/;"	f	file:
nvmem_rule_post_change	src/cpufreqd_nvclock.c	/^static void nvmem_rule_post_change(void *obj,$/;"	f	file:
o_plug	src/plugin_utils.c	/^	struct plugin_obj *o_plug = NULL;$/;"	l
o_plugin	src/config_parser.c	/^	struct plugin_obj *o_plugin;$/;"	l
o_plugin	src/plugin_utils.c	/^	struct plugin_obj *o_plugin = NULL;$/;"	l
o_plugin	src/plugin_utils.c	/^	struct plugin_obj *o_plugin;$/;"	l
o_plugin	src/plugin_utils.c	/^	struct plugin_obj o_plugin;$/;"	l
obj	src/config_parser.c	/^	void *obj = NULL; \/* to hold the value provided by a plugin *\/$/;"	l
obj	src/config_parser.h	/^	void *obj;$/;"	m	struct:directive
old_cmdline	src/daemon_utils.c	/^			char old_cmdline[256];$/;"	l
old_pidfile	src/daemon_utils.c	/^			char old_pidfile[256];$/;"	l
old_profile	src/main.c	/^	struct profile *old_profile = NULL, *new_profile = NULL;$/;"	l
old_sigmask	src/main.c	/^	sigset_t old_sigmask;$/;"	l
old_time	src/cpufreqd_acpi_battery.c	/^static double old_time;$/;"	v	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	manpages/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	utils/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldmode	src/sock_utils.c	/^	mode_t oldmode = 0;$/;"	l
oldpid	src/daemon_utils.c	/^		char oldpid[10];$/;"	l
open	src/cpufreqd_acpi_battery.c	/^	int open;$/;"	m	struct:battery_info	file:
open_acpi_event	src/cpufreqd_acpi_event.c	/^static int open_acpi_event (void) {$/;"	f	file:
open_battery	src/cpufreqd_acpi_battery.c	/^static int open_battery(struct battery_info *binfo) {$/;"	f	file:
open_governor_device	src/cpufreqd_governor_parameters.c	/^static struct sysfs_device *open_governor_device(unsigned int cpu, const char *governor)$/;"	f	file:
open_unix_sock	src/sock_utils.c	/^int open_unix_sock(const char *dirname, gid_t gid) {$/;"	f
option_index	src/main.c	/^	int ch,option_index = 0;$/;"	l
p	src/main.c	/^	struct profile *p = NULL, **pp = NULL;$/;"	l
parameter	src/cpufreqd_governor_parameters.c	/^	const char *parameter;$/;"	l
parameter_name	src/cpufreqd_governor_parameters.c	/^	char parameter_name[SYSFS_NAME_LEN];$/;"	m	struct:gov_parameter	file:
parameter_parse	src/cpufreqd_governor_parameters.c	/^static int parameter_parse(const char *keyword, const char *value, void **obj,$/;"	f	file:
parameter_value	src/cpufreqd_governor_parameters.c	/^	long int parameter_value;$/;"	m	struct:gov_parameter	file:
parent	src/cpufreqd_programs.c	/^	struct TNODE *parent;$/;"	m	struct:TNODE	typeref:struct:TNODE::TNODE	file:
parse	src/cpufreqd_plugin.h	/^	int (*parse) (const char *line, void **obj);$/;"	m	struct:cpufreqd_keyword
parse_config_general	src/config_parser.c	/^static int parse_config_general (FILE *config, struct cpufreqd_conf *configuration) {$/;"	f	file:
parse_config_profile	src/config_parser.c	/^static int parse_config_profile (FILE *config, struct profile *p, struct LIST *plugins,$/;"	f	file:
parse_config_rule	src/config_parser.c	/^static int parse_config_rule (FILE *config, struct rule *r, struct LIST *plugins) {$/;"	f	file:
path	src/cpufreqd_acpi.c	/^	char path[SYSFS_PATH_MAX];$/;"	l
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	manpages/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	utils/Makefile	/^pdfdir = ${docdir}$/;"	m
peer_sock	src/main.c	/^	int cpufreqd_sock = -1, peer_sock = -1; \/* input pipe *\/$/;"	l
percent_to_absolute	src/cpufreq_utils.c	/^unsigned long percent_to_absolute(unsigned long max_freq, unsigned long user_freq) {$/;"	f
pid	src/cpufreqd_programs.c	/^	int n = 0, ret = 0, pid = 0;$/;"	l
pid	src/daemon_utils.c	/^	FILE *pid;$/;"	l
pidfile	src/config_parser.h	/^	char pidfile[MAX_PATH_LEN];$/;"	m	struct:cpufreqd_conf
pipe_handler	src/main.c	/^static void pipe_handler(int signo) {$/;"	f	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/cpufreqd$/;"	m
pkgdatadir	manpages/Makefile	/^pkgdatadir = $(datadir)\/cpufreqd$/;"	m
pkgdatadir	src/Makefile	/^pkgdatadir = $(datadir)\/cpufreqd$/;"	m
pkgdatadir	utils/Makefile	/^pkgdatadir = $(datadir)\/cpufreqd$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/cpufreqd$/;"	m
pkgincludedir	manpages/Makefile	/^pkgincludedir = $(includedir)\/cpufreqd$/;"	m
pkgincludedir	src/Makefile	/^pkgincludedir = $(includedir)\/cpufreqd$/;"	m
pkgincludedir	utils/Makefile	/^pkgincludedir = $(includedir)\/cpufreqd$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/cpufreqd$/;"	m
pkglibdir	manpages/Makefile	/^pkglibdir = $(libdir)\/cpufreqd$/;"	m
pkglibdir	src/Makefile	/^pkglibdir = $(libdir)\/cpufreqd$/;"	m
pkglibdir	utils/Makefile	/^pkglibdir = $(libdir)\/cpufreqd$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/cpufreqd$/;"	m
pkglibexecdir	manpages/Makefile	/^pkglibexecdir = $(libexecdir)\/cpufreqd$/;"	m
pkglibexecdir	src/Makefile	/^pkglibexecdir = $(libexecdir)\/cpufreqd$/;"	m
pkglibexecdir	utils/Makefile	/^pkglibexecdir = $(libexecdir)\/cpufreqd$/;"	m
plugin	src/config_parser.c	/^	struct cpufreqd_plugin *plugin = NULL;$/;"	l
plugin	src/config_parser.c	/^	struct plugin_obj *plugin = NULL;$/;"	l
plugin	src/config_parser.h	/^	struct cpufreqd_plugin *plugin;$/;"	m	struct:directive	typeref:struct:directive::cpufreqd_plugin
plugin	src/cpufreqd_exec.c	/^static struct cpufreqd_plugin plugin =  {$/;"	v	typeref:struct:cpufreqd_plugin	file:
plugin	src/plugin_utils.c	/^	struct plugin_obj *plugin = NULL;$/;"	l
plugin	src/plugin_utils.h	/^	struct cpufreqd_plugin *plugin;$/;"	m	struct:plugin_obj	typeref:struct:plugin_obj::cpufreqd_plugin
plugin_conf	src/cpufreqd_plugin.h	/^	int (*plugin_conf) (const char *key, const char *value);$/;"	m	struct:cpufreqd_plugin
plugin_exit	src/cpufreqd_plugin.h	/^	int (*plugin_exit) (void);$/;"	m	struct:cpufreqd_plugin
plugin_handle_keyword	src/plugin_utils.c	/^struct cpufreqd_keyword *plugin_handle_keyword(struct LIST *plugins,$/;"	f
plugin_handle_section	src/plugin_utils.c	/^struct plugin_obj *plugin_handle_section(const char *name, struct LIST *plugins) {$/;"	f
plugin_init	src/cpufreqd_plugin.h	/^	int (*plugin_init) (void);$/;"	m	struct:cpufreqd_plugin
plugin_name	src/cpufreqd_plugin.h	/^	const char *plugin_name;$/;"	m	struct:cpufreqd_plugin
plugin_obj	src/plugin_utils.h	/^struct plugin_obj {$/;"	s
plugin_post_conf	src/cpufreqd_plugin.h	/^	int (*plugin_post_conf) (void);$/;"	m	struct:cpufreqd_plugin
plugin_update	src/cpufreqd_plugin.h	/^	int (*plugin_update) (void);$/;"	m	struct:cpufreqd_plugin
plugins	src/config_parser.h	/^	struct LIST plugins; \/* list of configured plugins struct o_plugin *\/$/;"	m	struct:cpufreqd_conf	typeref:struct:cpufreqd_conf::LIST
plugins_post_conf	src/plugin_utils.c	/^void plugins_post_conf(struct LIST *plugins) {$/;"	f
plugins_post_confed	src/config_parser.c	/^	int plugins_post_confed = 0; \/* did I already run post_conf for all? *\/$/;"	l
pmu	src/cpufreqd_pmu.c	/^static struct cpufreqd_plugin pmu = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
pmu_ac_evaluate	src/cpufreqd_pmu.c	/^static int pmu_ac_evaluate(const void *s) {$/;"	f	file:
pmu_ac_parse	src/cpufreqd_pmu.c	/^static int pmu_ac_parse(const char *ev, void **obj) {$/;"	f	file:
pmu_bat_evaluate	src/cpufreqd_pmu.c	/^static int pmu_bat_evaluate(const void *s) {$/;"	f	file:
pmu_bat_parse	src/cpufreqd_pmu.c	/^static int pmu_bat_parse(const char *ev, void **obj) {$/;"	f	file:
pmu_init	src/cpufreqd_pmu.c	/^static int pmu_init(void) {$/;"	f	file:
pmu_update	src/cpufreqd_pmu.c	/^static int pmu_update(void) {$/;"	f	file:
policy	src/config_parser.h	/^	struct cpufreq_policy policy;$/;"	m	struct:profile	typeref:struct:profile::cpufreq_policy
policy	utils/getspeed.c	/^	char buf[4096] = {0}, name[256] = {0}, policy[255] = {0};$/;"	l
poll_intv	src/config_parser.h	/^	struct timeval poll_intv;$/;"	m	struct:cpufreqd_conf	typeref:struct:cpufreqd_conf::timeval
poll_val	src/config_parser.c	/^			float poll_val = 1.0;$/;"	l
pos	src/config_parser.c	/^	fpos_t pos;$/;"	l
pp	src/main.c	/^	struct profile *p = NULL, **pp = NULL;$/;"	l
predecessor	src/cpufreqd_programs.c	/^static TNODE *predecessor(TNODE *n) {$/;"	f	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	manpages/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	utils/Makefile	/^prefix = \/usr\/local$/;"	m
preorder_visit	src/cpufreqd_programs.c	/^static void preorder_visit(TREE *t, void (*cb)(TNODE **n)) {$/;"	f	file:
present	src/cpufreqd_acpi_battery.c	/^	struct sysfs_attribute *present;$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_attribute	file:
present_rate	src/cpufreqd_acpi_battery.c	/^	int present_rate;$/;"	m	struct:battery_info	file:
prev	src/list.c	/^	struct NODE *prev = 0L;$/;"	l
prev	src/list.h	/^	struct NODE *prev;$/;"	m	struct:NODE	typeref:struct:NODE::NODE
prg_basename	src/cpufreqd_programs.c	/^	char *prg_basename;$/;"	l
print_help	src/config_parser.h	/^	unsigned int print_help;$/;"	m	struct:cpufreqd_conf
print_help	src/main.c	/^static void print_help(const char *me) {$/;"	f	file:
print_tree	src/cpufreqd_programs.c	/^static void print_tree(TNODE *n) {$/;"	f	file:
print_version	src/config_parser.h	/^	unsigned int print_version;$/;"	m	struct:cpufreqd_conf
print_version	src/main.c	/^static void print_version(const char *me) {$/;"	f	file:
prof	src/config_parser.h	/^	struct profile **prof; \/* profiles per CPU *\/$/;"	m	struct:rule	typeref:struct:rule::profile
profile	src/config_parser.h	/^struct profile {$/;"	s
profile_found	src/config_parser.c	/^		int profile_found = 0;$/;"	l
profile_name	src/config_parser.c	/^		char profile_name[MAX_STRING_LEN];$/;"	l
profile_name	src/config_parser.h	/^	char profile_name[MAX_STRING_LEN]; \/* this is a list actually, eg: "CPU0:prof0;CPU1:prof1" *\/$/;"	m	struct:rule
profile_post_change	src/cpufreqd_plugin.h	/^	void (*profile_post_change) (void *obj, const struct cpufreq_policy *old,$/;"	m	struct:cpufreqd_keyword
profile_post_change_calls	src/cpufreqd_exec.c	/^static int profile_post_change_calls;$/;"	v	file:
profile_pre_change	src/cpufreqd_plugin.h	/^	void (*profile_pre_change) (void *obj, const struct cpufreq_policy *old,$/;"	m	struct:cpufreqd_keyword
profile_pre_change_calls	src/cpufreqd_exec.c	/^static int profile_pre_change_calls;$/;"	v	file:
profiles	src/config_parser.h	/^	struct LIST profiles; \/* list of configured struct profile *\/$/;"	m	struct:cpufreqd_conf	typeref:struct:cpufreqd_conf::LIST
program	src/cpufreqd_programs.c	/^	char program[PRG_LENGTH];$/;"	l
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	manpages/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	utils/Makefile	/^program_transform_name = s,x,x,$/;"	m
programs	src/cpufreqd_programs.c	/^static struct cpufreqd_plugin programs = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
programs_evaluate	src/cpufreqd_programs.c	/^static int programs_evaluate(const void *s) {$/;"	f	file:
programs_exit	src/cpufreqd_programs.c	/^static int programs_exit(void) {$/;"	f	file:
programs_free	src/cpufreqd_programs.c	/^static void programs_free(void *obj) {$/;"	f	file:
programs_parse	src/cpufreqd_programs.c	/^static int programs_parse(const char *ev, void **obj) {$/;"	f	file:
programs_update	src/cpufreqd_programs.c	/^static int programs_update(void) {$/;"	f	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	manpages/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	utils/Makefile	/^psdir = ${docdir}$/;"	m
put_attribute	src/cpufreqd_acpi.c	/^void put_attribute(struct sysfs_attribute *attr) {$/;"	f
put_class_device	src/cpufreqd_acpi.c	/^void put_class_device(struct sysfs_class_device *clsdev)$/;"	f
queue_launcher	src/cpufreqd_exec.c	/^static void *queue_launcher (void __UNUSED__ *arg) {$/;"	f	file:
rc	src/cpufreqd_apm.c	/^	int rc;$/;"	l
rc	src/daemon_utils.c	/^	int rc = 0;$/;"	l
read_args	src/main.c	/^static int read_args (int argc, char *argv[]) {$/;"	f	file:
read_battery	src/cpufreqd_acpi_battery.c	/^static int read_battery(struct battery_info *binfo) {$/;"	f	file:
read_chars	src/cpufreqd_acpi_event.c	/^	int read_chars = 0, ret = 0;$/;"	l
read_clean_line	src/config_parser.c	/^static char *read_clean_line(FILE *fp, char *buf, int n) {$/;"	f	file:
read_int	src/cpufreqd_acpi.c	/^int read_int(struct sysfs_attribute *attr, int *value)$/;"	f
read_value	src/cpufreqd_acpi.c	/^int read_value(struct sysfs_attribute *attr)$/;"	f
readed	src/cpufreqd_tau.c	/^		  int readed;$/;"	l
released	src/cpufreqd_sensors.c	/^	struct sensors_monitor *released = NULL;$/;"	l
remaining	src/cpufreqd_acpi_battery.c	/^	int remaining;$/;"	m	struct:battery_info	file:
remote_gid	src/config_parser.h	/^	gid_t remote_gid;$/;"	m	struct:cpufreqd_conf
req	src/cpufreqd_acpi_event.c	/^			struct timespec req = { .tv_sec = 5, .tv_nsec = 0 };$/;"	l
reset_event	src/cpufreqd_acpi_event.c	/^void reset_event(void) {$/;"	f
ret	src/cpufreqd_acpi.c	/^	short int ret = 0;$/;"	l
ret	src/cpufreqd_acpi_ac.c	/^	int *ret = malloc(sizeof(int));$/;"	l
ret	src/cpufreqd_acpi_battery.c	/^	struct battery_info *ret = NULL;$/;"	l
ret	src/cpufreqd_acpi_battery.c	/^	struct battery_interval *ret = calloc(1, sizeof(struct battery_interval));$/;"	l
ret	src/cpufreqd_acpi_event.c	/^	int read_chars = 0, ret = 0;$/;"	l
ret	src/cpufreqd_acpi_event.c	/^	int ret = 0;$/;"	l
ret	src/cpufreqd_acpi_temperature.c	/^	struct temperature_interval *ret = calloc(1, sizeof(struct temperature_interval));$/;"	l
ret	src/cpufreqd_acpi_temperature.c	/^	struct thermal_zone *ret = NULL;$/;"	l
ret	src/cpufreqd_apm.c	/^	struct battery_interval *ret = malloc(sizeof(struct battery_interval));$/;"	l
ret	src/cpufreqd_apm.c	/^	unsigned int *ret = malloc(sizeof(int));$/;"	l
ret	src/cpufreqd_cpu.c	/^	struct cpu_interval *ret = NULL, **temp_cint = NULL;$/;"	l
ret	src/cpufreqd_exec.c	/^	int ret = 0;$/;"	l
ret	src/cpufreqd_governor_parameters.c	/^	struct gov_parameter *ret;$/;"	l
ret	src/cpufreqd_nforce2.c	/^	int *ret = calloc(1, sizeof(int));$/;"	l
ret	src/cpufreqd_nvclock.c	/^	struct nvclock_elem *ret = calloc(1, sizeof(struct nvclock_elem));$/;"	l
ret	src/cpufreqd_pmu.c	/^	struct battery_interval *ret = malloc(sizeof(struct battery_interval));$/;"	l
ret	src/cpufreqd_pmu.c	/^	unsigned int *ret = malloc(sizeof(int));$/;"	l
ret	src/cpufreqd_programs.c	/^	TNODE *ret = (TNODE *)calloc(1, sizeof(TNODE));$/;"	l
ret	src/cpufreqd_programs.c	/^	TNODE *ret = n->left;$/;"	l
ret	src/cpufreqd_programs.c	/^	TREE *ret=NULL;$/;"	l
ret	src/cpufreqd_programs.c	/^	int n = 0, ret = 0, pid = 0;$/;"	l
ret	src/cpufreqd_sensors.c	/^	struct sensor_object *ret = calloc(1, sizeof(struct sensor_object));$/;"	l
ret	src/cpufreqd_sensors.c	/^	struct sensors_monitor *ret = NULL;$/;"	l
ret	src/list.c	/^	int ret = 0;$/;"	l
ret	src/list.c	/^	struct LIST *ret = 0L;$/;"	l
ret	src/list.c	/^	struct NODE *ret = 0L;$/;"	l
ret	src/list.c	/^	struct NODE *ret = NULL;$/;"	l
ret	src/main.c	/^	int ret = 0;$/;"	l
ret	src/main.c	/^	int rule_equivalent = 0, ret = 0;$/;"	l
ret	src/main.c	/^	struct rule *ret = NULL;$/;"	l
ret	src/plugin_utils.c	/^	int ret = 0;$/;"	l
rfd	src/cpufreqd_acpi_event.c	/^	struct pollfd rfd;$/;"	l
rfds	src/main.c	/^	fd_set rfds;$/;"	l
right	src/cpufreqd_programs.c	/^	struct TNODE *right;$/;"	m	struct:TNODE	typeref:struct:TNODE::TNODE	file:
rule	src/config_parser.h	/^struct rule {$/;"	s
rule_equivalent	src/main.c	/^	int rule_equivalent = 0, ret = 0;$/;"	l
rule_post_change	src/cpufreqd_plugin.h	/^	void (*rule_post_change) (void *obj, const struct rule *old,$/;"	m	struct:cpufreqd_keyword
rule_pre_change	src/cpufreqd_plugin.h	/^	void (*rule_pre_change) (void *obj, const struct rule *old,$/;"	m	struct:cpufreqd_keyword
rule_score	src/main.c	/^static unsigned int rule_score(struct rule *rule) {$/;"	f	file:
rules	src/config_parser.h	/^	struct LIST rules; \/* list of configured struct rule *\/$/;"	m	struct:cpufreqd_conf	typeref:struct:cpufreqd_conf::LIST
running_programs	src/cpufreqd_programs.c	/^static TREE *running_programs = 0L;$/;"	v	file:
s1	src/cpufreqd_pmu.c	/^	char *s1, *s2;$/;"	l
s1	src/cpufreqd_tau.c	/^	char *s1, *s2;$/;"	l
s2	src/cpufreqd_pmu.c	/^	char *s1, *s2;$/;"	l
s2	src/cpufreqd_tau.c	/^	char *s1, *s2;$/;"	l
sa	src/sock_utils.c	/^	struct sockaddr_un sa;$/;"	l
sampling_down_factor_parse	src/cpufreqd_governor_parameters.c	/^static int sampling_down_factor_parse(const char *value, void **obj)$/;"	f	file:
sampling_rate_parse	src/cpufreqd_governor_parameters.c	/^static int sampling_rate_parse(const char *value, void **obj)$/;"	f	file:
sb	src/cpufreqd_apm.c	/^	struct stat sb;$/;"	l
sb	src/cpufreqd_nforce2.c	/^	struct stat sb;$/;"	l
sb	src/daemon_utils.c	/^	struct stat sb;$/;"	l
sbin_PROGRAMS	src/Makefile	/^sbin_PROGRAMS = cpufreqd$(EXEEXT)$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	manpages/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	utils/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sck	src/cpufreqd_acpi_event.c	/^		struct sockaddr_un sck;$/;"	l
sck	utils/getspeed.c	/^	struct sockaddr_un sck;$/;"	l
sck	utils/setspeed.c	/^	struct sockaddr_un sck;$/;"	l
score	src/config_parser.h	/^	unsigned int score;$/;"	m	struct:rule
sensor_evaluate	src/cpufreqd_sensors.c	/^static int sensor_evaluate(const void *s) {$/;"	f	file:
sensor_object	src/cpufreqd_sensors.c	/^struct sensor_object {$/;"	s	file:
sensor_parse	src/cpufreqd_sensors.c	/^static int sensor_parse(const char *ev, void **obj) {$/;"	f	file:
sensors_conf	src/cpufreqd_sensors.c	/^static int sensors_conf(const char *key, const char *value) {$/;"	f	file:
sensors_conffile	src/cpufreqd_sensors.c	/^static char sensors_conffile[MAX_PATH_LEN];$/;"	v	file:
sensors_exit	src/cpufreqd_sensors.c	/^static int sensors_exit(void) {$/;"	f	file:
sensors_feature	src/cpufreqd_sensors.c	/^typedef sensors_feature_data sensors_feature;$/;"	t	file:
sensors_get	src/cpufreqd_sensors.c	/^static int sensors_get(void) {$/;"	f	file:
sensors_get_chip_name	src/cpufreqd_sensors.c	/^static const char* sensors_get_chip_name(const sensors_chip_name *chip) {$/;"	f	file:
sensors_monitor	src/cpufreqd_sensors.c	/^struct sensors_monitor {$/;"	s	file:
sensors_plugin	src/cpufreqd_sensors.c	/^static struct cpufreqd_plugin sensors_plugin = {$/;"	l	file:
sensors_post_conf	src/cpufreqd_sensors.c	/^static int sensors_post_conf(void) {$/;"	f	file:
sensors_snprintf_chip_name	src/cpufreqd_sensors.c	/^static int sensors_snprintf_chip_name(char *str, size_t size,$/;"	f	file:
set_cpufreqd_runmode	src/main.c	/^static int set_cpufreqd_runmode(int mode) {$/;"	f	file:
set_parameter	src/cpufreqd_governor_parameters.c	/^static void set_parameter(const unsigned int cpu, const char *governor,$/;"	f	file:
set_vcore	src/cpufreqd_nforce2.c	/^static inline void set_vcore(int vcore)$/;"	f	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	manpages/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	utils/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
signal_action	src/cpufreqd_exec.c	/^	struct sigaction signal_action;$/;"	l
signal_action	src/main.c	/^	struct sigaction signal_action;$/;"	l
so	src/cpufreqd_sensors.c	/^	const struct sensor_object *so = (const struct sensor_object *) s;$/;"	l
sock	utils/getspeed.c	/^	int sock;$/;"	l
sock	utils/setspeed.c	/^	int sock;$/;"	l
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	manpages/Makefile	/^srcdir = .$/;"	m
srcdir	src/Makefile	/^srcdir = .$/;"	m
srcdir	utils/Makefile	/^srcdir = .$/;"	m
st	utils/getspeed.c	/^	struct stat st;$/;"	l
st	utils/setspeed.c	/^	struct stat st;$/;"	l
starttag	src/plugin_utils.c	/^	char starttag[MAX_STRING_LEN];$/;"	l
state	src/config_parser.c	/^	int state = 0, min_is_percent = 0, max_is_percent = 0, tmp_freq = 0;$/;"	l
state	src/config_parser.c	/^	int state = 0;$/;"	l
status	src/cpufreqd_acpi_battery.c	/^	struct sysfs_attribute *status;$/;"	m	struct:battery_info	typeref:struct:battery_info::sysfs_attribute	file:
str	src/cpufreqd_pmu.c	/^	char str[255];$/;"	l
str	src/cpufreqd_tau.c	/^	char str[255];$/;"	l
str_copy	src/cpufreqd_programs.c	/^	char str_copy[5*PRG_LENGTH];$/;"	l
strip_comments_line	src/config_parser.c	/^static char *strip_comments_line (char *str) {$/;"	f	file:
strvalue	src/cpufreqd_governor_parameters.c	/^	char strvalue[BUFLEN_PARAMETER_VALUE];$/;"	l
sub_feat	src/cpufreqd_sensors.c	/^	const sensors_subfeature *sub_feat;$/;"	l
sub_feat	src/cpufreqd_sensors.c	/^	const sensors_subfeature *sub_feat;$/;"	m	struct:sensors_monitor	file:
subdir	Makefile	/^subdir = .$/;"	m
subdir	manpages/Makefile	/^subdir = manpages$/;"	m
subdir	src/Makefile	/^subdir = src$/;"	m
subdir	utils/Makefile	/^subdir = utils$/;"	m
suffix	src/cpufreqd_governor_parameters.c	/^	char suffix;$/;"	l
suffix_parsed	src/cpufreqd_governor_parameters.c	/^	int suffix_parsed;$/;"	l
supported_governors	src/cpufreqd_governor_parameters.c	/^static const char *supported_governors[] = {$/;"	v	file:
swap	src/cpufreqd_programs.c	/^	TNODE *swap = NULL;$/;"	l
sweep_unused_node	src/cpufreqd_programs.c	/^static void sweep_unused_node(TNODE **n) {$/;"	f	file:
sys_info	src/cpufreqd_plugin.h	/^	struct cpufreq_sys_info *sys_info;$/;"	m	struct:cpufreqd_info	typeref:struct:cpufreqd_info::cpufreq_sys_info
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	manpages/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	utils/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysfsmountpath	src/cpufreqd_governor_parameters.c	/^	char sysfsmountpath[SYSFS_PATH_MAX];$/;"	l
syspath_cpu	src/cpufreqd_governor_parameters.c	/^static char syspath_cpu[SYSFS_PATH_MAX];$/;"	v	file:
t_prog	src/cpufreqd_programs.c	/^	char *t_prog;$/;"	l
tab	src/cpufreqd_programs.c	/^	char tab[64];$/;"	l
tag	src/cpufreqd_pmu.c	/^static char tag[255];$/;"	v	file:
tag	src/cpufreqd_tau.c	/^static char tag[255];$/;"	v	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz$/;"	m
target	Makefile	/^target = x86_64-unknown-linux-gnu$/;"	m
target	manpages/Makefile	/^target = x86_64-unknown-linux-gnu$/;"	m
target	src/Makefile	/^target = x86_64-unknown-linux-gnu$/;"	m
target	utils/Makefile	/^target = x86_64-unknown-linux-gnu$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	manpages/Makefile	/^target_alias = $/;"	m
target_alias	src/Makefile	/^target_alias = $/;"	m
target_alias	utils/Makefile	/^target_alias = $/;"	m
target_cpu	Makefile	/^target_cpu = x86_64$/;"	m
target_cpu	manpages/Makefile	/^target_cpu = x86_64$/;"	m
target_cpu	src/Makefile	/^target_cpu = x86_64$/;"	m
target_cpu	utils/Makefile	/^target_cpu = x86_64$/;"	m
target_os	Makefile	/^target_os = linux-gnu$/;"	m
target_os	manpages/Makefile	/^target_os = linux-gnu$/;"	m
target_os	src/Makefile	/^target_os = linux-gnu$/;"	m
target_os	utils/Makefile	/^target_os = linux-gnu$/;"	m
target_triplet	Makefile	/^target_triplet = x86_64-unknown-linux-gnu$/;"	m
target_triplet	manpages/Makefile	/^target_triplet = x86_64-unknown-linux-gnu$/;"	m
target_triplet	src/Makefile	/^target_triplet = x86_64-unknown-linux-gnu$/;"	m
target_triplet	utils/Makefile	/^target_triplet = x86_64-unknown-linux-gnu$/;"	m
target_vendor	Makefile	/^target_vendor = unknown$/;"	m
target_vendor	manpages/Makefile	/^target_vendor = unknown$/;"	m
target_vendor	src/Makefile	/^target_vendor = unknown$/;"	m
target_vendor	utils/Makefile	/^target_vendor = unknown$/;"	m
tau	src/cpufreqd_tau.c	/^static struct cpufreqd_plugin tau = {$/;"	v	typeref:struct:cpufreqd_plugin	file:
tau_evaluate	src/cpufreqd_tau.c	/^static int tau_evaluate(const void *s) {$/;"	f	file:
tau_init	src/cpufreqd_tau.c	/^static int tau_init(void) {$/;"	f	file:
tau_parse	src/cpufreqd_tau.c	/^static int tau_parse(const char *ev, void **obj) {$/;"	f	file:
tau_temperature	src/cpufreqd_tau.c	/^struct temperature_interval tau_temperature;$/;"	v	typeref:struct:temperature_interval
tau_temperature_interval	src/cpufreqd_tau.c	/^	struct temperature_interval *tau_temperature_interval = malloc(sizeof(struct temperature_interval));$/;"	l
tau_update	src/cpufreqd_tau.c	/^static int tau_update(void) {$/;"	f	file:
temp	src/cpufreqd_acpi_temperature.c	/^	long int temp = temp_avg;$/;"	l
temp	src/cpufreqd_acpi_temperature.c	/^	struct sysfs_attribute *temp;$/;"	m	struct:thermal_zone	typeref:struct:thermal_zone::sysfs_attribute	file:
temp	src/cpufreqd_cpu.c	/^	struct cpu_interval *temp = NULL;$/;"	l
temp_avg	src/cpufreqd_acpi_temperature.c	/^static long int temp_avg;$/;"	v	file:
temp_cint	src/cpufreqd_cpu.c	/^	struct cpu_interval *ret = NULL, **temp_cint = NULL;$/;"	l
temp_str	src/cpufreqd_cpu.c	/^	char temp_str[512];$/;"	l
temp_usage	src/cpufreqd_cpu.c	/^	struct cpu_usage *temp_usage = cusage_old;$/;"	l
temperature	src/cpufreqd_acpi_temperature.c	/^	int temperature;$/;"	m	struct:thermal_zone	file:
temperature_interval	src/cpufreqd_acpi_temperature.c	/^struct temperature_interval {$/;"	s	file:
temperature_interval	src/cpufreqd_tau.c	/^struct temperature_interval {$/;"	s	file:
term_handler	src/main.c	/^static void term_handler(int signo) {$/;"	f	file:
thermal_zone	src/cpufreqd_acpi_temperature.c	/^struct thermal_zone {$/;"	s	file:
ti	src/cpufreqd_acpi_temperature.c	/^	const struct temperature_interval *ti = (const struct temperature_interval *)s;$/;"	l
ti	src/cpufreqd_tau.c	/^	const struct temperature_interval *ti = (const struct temperature_interval *)s;$/;"	l
timer_expired	src/main.c	/^static int timer_expired = 1; \/* expired in order to run on the first loop *\/$/;"	v	file:
timestamp	src/cpufreqd_plugin.h	/^	struct timeval timestamp;$/;"	m	struct:cpufreqd_info	typeref:struct:cpufreqd_info::timeval
tmp	src/config_parser.c	/^				struct profile *tmp = (struct profile *)node->content;$/;"	l
tmp	src/config_parser.c	/^				struct rule *tmp = (struct rule *)node->content;$/;"	l
tmp	src/cpufreq_utils.c	/^	struct cpufreq_available_frequencies *tmp = freqs;$/;"	l
tmp_directive	src/config_parser.c	/^	struct directive *tmp_directive;$/;"	l
tmp_freq	src/config_parser.c	/^	int state = 0, min_is_percent = 0, max_is_percent = 0, tmp_freq = 0;$/;"	l
tmp_lim	src/main.c	/^		struct cpufreq_limits *tmp_lim = cpufreqd_info->limits+i;$/;"	l
tmp_name	src/config_parser.c	/^		char tmp_name[MAX_STRING_LEN];$/;"	l
tmp_profile	src/config_parser.c	/^	struct profile *tmp_profile = NULL;$/;"	l
tmp_profile	src/config_parser.c	/^	struct profile *tmp_profile;$/;"	l
tmp_rule	src/config_parser.c	/^	struct rule *tmp_rule = NULL;$/;"	l
tmp_rule	src/config_parser.c	/^	struct rule *tmp_rule;$/;"	l
tmp_rule	src/main.c	/^	struct rule *tmp_rule = NULL;$/;"	l
token	src/config_parser.c	/^		char *token;$/;"	l
token	src/config_parser.c	/^	char *token;$/;"	l
tokenize	src/cpufreqd_pmu.c	/^static int tokenize (FILE *fp, char *t, char *v) {$/;"	f	file:
tokenize	src/cpufreqd_tau.c	/^static int tokenize (FILE *fp, char *t, char *v) {$/;"	f	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	manpages/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	utils/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	manpages/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	utils/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	manpages/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	utils/Makefile	/^top_srcdir = ..$/;"	m
total_capacity	src/cpufreqd_acpi_battery.c	/^	int i = 0, total_capacity = 0, total_remaining = 0, n_read = 0;$/;"	l
total_remaining	src/cpufreqd_acpi_battery.c	/^	int i = 0, total_capacity = 0, total_remaining = 0, n_read = 0;$/;"	l
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	manpages/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	utils/Makefile	/^transform = $(program_transform_name)$/;"	m
type	src/cpufreqd_acpi.c	/^	char type[256];$/;"	l
type	src/cpufreqd_acpi_event.c	/^	unsigned int type;$/;"	m	struct:acpi_event	file:
tz	src/cpufreqd_acpi_temperature.c	/^	struct thermal_zone *tz;$/;"	m	struct:temperature_interval	typeref:struct:temperature_interval::thermal_zone	file:
up_threshold_parse	src/cpufreqd_governor_parameters.c	/^static int up_threshold_parse(const char *value, void **obj)$/;"	f	file:
update_plugin_states	src/plugin_utils.c	/^void update_plugin_states(struct LIST *plugins) {$/;"	f
update_rule_scores	src/main.c	/^static struct rule *update_rule_scores(struct LIST *rule_list) {$/;"	f	file:
used	src/cpufreqd_programs.c	/^	unsigned short used;$/;"	m	struct:TNODE	file:
used	src/plugin_utils.h	/^	unsigned int used;		\/* track if the plugin is used$/;"	m	struct:plugin_obj
used_plugins	src/plugin_utils.c	/^	int used_plugins = 0;$/;"	l
val	src/cpufreqd_governor_parameters.c	/^	long int val;$/;"	l
val	src/cpufreqd_pmu.c	/^static char val[255];$/;"	v	file:
val	src/cpufreqd_tau.c	/^static char val[255];$/;"	v	file:
validate_feature_name	src/cpufreqd_sensors.c	/^static struct sensors_monitor * validate_feature_name(const char *name) {$/;"	f	file:
validate_plugins	src/plugin_utils.c	/^int validate_plugins(struct LIST *plugins) {$/;"	f
value	src/config_parser.c	/^	char *clean = NULL, *name = NULL, *value = NULL;$/;"	l
value	src/config_parser.c	/^	char *value;$/;"	l
value	src/cpufreqd_acpi_ac.c	/^	int value;$/;"	l
value	src/cpufreqd_governor_parameters.c	/^	long int value;$/;"	l
value	src/cpufreqd_nvclock.c	/^	unsigned int value; \/* used for gpu and mem clock *\/$/;"	m	struct:nvclock_elem	file:
value	src/cpufreqd_sensors.c	/^	double value;$/;"	m	struct:sensors_monitor	file:
value_str	src/cpufreqd_governor_parameters.c	/^	char value_str[BUFLEN_PARAMETER_VALUE];$/;"	l
vcore	src/cpufreqd_nforce2.c	/^			int vcore = *(int *)obj;$/;"	l
vcore_default	src/cpufreqd_nforce2.c	/^static int vcore_default;$/;"	v	file:
vcore_parse	src/cpufreqd_nforce2.c	/^static int vcore_parse(const char *ev, void **obj) {$/;"	f	file:
vcore_path	src/cpufreqd_nforce2.c	/^static char vcore_path[MAX_PATH_LEN];$/;"	v	file:
vcore_post_change	src/cpufreqd_nforce2.c	/^static void vcore_post_change(void *obj,$/;"	f	file:
vcore_pre_change	src/cpufreqd_nforce2.c	/^static void vcore_pre_change(void *obj,$/;"	f	file:
vcore_profile_calls	src/cpufreqd_nforce2.c	/^int vcore_profile_calls;$/;"	v
version	src/cpufreqd_pmu.c	/^static char version[100];$/;"	v	file:
wake_cpufreqd	src/cpufreqd_plugin.h	41;"	d
watch_ac	src/cpufreqd_acpi.h	/^	int watch_ac;$/;"	m	struct:acpi_configuration
watch_battery	src/cpufreqd_acpi.h	/^	int watch_battery;$/;"	m	struct:acpi_configuration
watch_event	src/cpufreqd_acpi.h	/^	int watch_event;$/;"	m	struct:acpi_configuration
watch_temperature	src/cpufreqd_acpi.h	/^	int watch_temperature;$/;"	m	struct:acpi_configuration
wcards	src/cpufreqd_cpu.c	/^	char wcards[4];$/;"	l
weighted_activity	src/cpufreqd_cpu.c	/^	unsigned long weighted_activity = cur->c_user + cur->c_nice \/ nice_scale + cur->c_sys;$/;"	l
weighted_activity_old	src/cpufreqd_cpu.c	/^	unsigned long weighted_activity_old = old->c_user + old->c_nice \/ nice_scale + old->c_sys;$/;"	l
word	src/cpufreqd_plugin.h	/^	const char *word;$/;"	m	struct:cpufreqd_keyword
write_cpufreqd_pid	src/daemon_utils.c	/^int write_cpufreqd_pid(const char *pidfile)$/;"	f
